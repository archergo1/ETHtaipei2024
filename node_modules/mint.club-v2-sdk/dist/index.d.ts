import { ExtractAbiErrorNames } from 'abitype';
import * as viem from 'viem';
import { Chain, HttpTransportConfig, FallbackTransportConfig, PublicClient, WalletClient, Abi, ContractFunctionName, ContractFunctionArgs, TransactionReceipt, ReadContractReturnType } from 'viem';
export { Abi } from 'viem';
import * as viem_zksync from 'viem/zksync';
import * as viem__types_chains_celo_serializers from 'viem/_types/chains/celo/serializers';
import * as chains from 'viem/chains';
import { sepolia, blastSepolia, avalancheFuji } from 'viem/chains';
import { CIDString } from '@filebase/client';

declare const BOND_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "tokenImplementation";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "multiTokenImplementation";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "protocolBeneficiary_";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "creationFee_";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "maxSteps";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "target";
        readonly type: "address";
    }];
    readonly name: "AddressEmptyCode";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "AddressInsufficientBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "ERC1167FailedCreateClone";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "FailedInnerCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_BOND__InvalidPaginationParameters";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__CreationFeeTransactionFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__ExceedMaxSupply";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__ExceedTotalSupply";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "reason";
        readonly type: "string";
    }];
    readonly name: "MCV2_Bond__InvalidConstructorParams";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__InvalidCreationFee";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__InvalidCreatorAddress";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__InvalidCurrentSupply";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__InvalidReceiver";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "reason";
        readonly type: "string";
    }];
    readonly name: "MCV2_Bond__InvalidReserveToken";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "reason";
        readonly type: "string";
    }];
    readonly name: "MCV2_Bond__InvalidStepParams";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__InvalidTokenAmount";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "reason";
        readonly type: "string";
    }];
    readonly name: "MCV2_Bond__InvalidTokenCreationParams";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__PermissionDenied";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__SlippageLimitExceeded";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__TokenNotFound";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Bond__TokenSymbolAlreadyExists";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Royalty__InvalidParams";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Royalty__NothingToClaim";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }];
    readonly name: "OwnableInvalidOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "OwnableUnauthorizedAccount";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "bits";
        readonly type: "uint8";
    }, {
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "SafeCastOverflowedUintDowncast";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "SafeERC20FailedOperation";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }];
    readonly name: "BondCreatorUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "user";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountBurned";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "refundAmount";
        readonly type: "uint256";
    }];
    readonly name: "Burn";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "CreationFeeUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "user";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountMinted";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "reserveAmount";
        readonly type: "uint256";
    }];
    readonly name: "Mint";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "name";
        readonly type: "string";
    }, {
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "symbol";
        readonly type: "string";
    }, {
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "uri";
        readonly type: "string";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }];
    readonly name: "MultiTokenCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "previousOwner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "OwnershipTransferred";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "protocolBeneficiary";
        readonly type: "address";
    }];
    readonly name: "ProtocolBeneficiaryUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "user";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "RoyaltyClaimed";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "ratio";
        readonly type: "uint256";
    }];
    readonly name: "RoyaltyRangeUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "name";
        readonly type: "string";
    }, {
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "symbol";
        readonly type: "string";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }];
    readonly name: "TokenCreated";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "BURN_ADDRESS";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokensToBurn";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "minRefund";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "burn";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }];
    readonly name: "burnRoyalties";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }];
    readonly name: "claimRoyalties";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "uri";
            readonly type: "string";
        }];
        readonly internalType: "struct MCV2_Bond.MultiTokenParams";
        readonly name: "tp";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly internalType: "uint16";
            readonly name: "mintRoyalty";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "burnRoyalty";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "reserveToken";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "maxSupply";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128[]";
            readonly name: "stepRanges";
            readonly type: "uint128[]";
        }, {
            readonly internalType: "uint128[]";
            readonly name: "stepPrices";
            readonly type: "uint128[]";
        }];
        readonly internalType: "struct MCV2_Bond.BondParams";
        readonly name: "bp";
        readonly type: "tuple";
    }];
    readonly name: "createMultiToken";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }];
        readonly internalType: "struct MCV2_Bond.TokenParams";
        readonly name: "tp";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly internalType: "uint16";
            readonly name: "mintRoyalty";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "burnRoyalty";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "reserveToken";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "maxSupply";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128[]";
            readonly name: "stepRanges";
            readonly type: "uint128[]";
        }, {
            readonly internalType: "uint128[]";
            readonly name: "stepPrices";
            readonly type: "uint128[]";
        }];
        readonly internalType: "struct MCV2_Bond.BondParams";
        readonly name: "bp";
        readonly type: "tuple";
    }];
    readonly name: "createToken";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "creationFee";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "exists";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "getDetail";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint16";
            readonly name: "mintRoyalty";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "burnRoyalty";
            readonly type: "uint16";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "creator";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint8";
                readonly name: "decimals";
                readonly type: "uint8";
            }, {
                readonly internalType: "string";
                readonly name: "symbol";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "uint40";
                readonly name: "createdAt";
                readonly type: "uint40";
            }, {
                readonly internalType: "uint128";
                readonly name: "currentSupply";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "maxSupply";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "priceForNextMint";
                readonly type: "uint128";
            }, {
                readonly internalType: "address";
                readonly name: "reserveToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint8";
                readonly name: "reserveDecimals";
                readonly type: "uint8";
            }, {
                readonly internalType: "string";
                readonly name: "reserveSymbol";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "reserveName";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "reserveBalance";
                readonly type: "uint256";
            }];
            readonly internalType: "struct MCV2_Bond.BondInfo";
            readonly name: "info";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "rangeTo";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "price";
                readonly type: "uint128";
            }];
            readonly internalType: "struct MCV2_Bond.BondStep[]";
            readonly name: "steps";
            readonly type: "tuple[]";
        }];
        readonly internalType: "struct MCV2_Bond.BondDetail";
        readonly name: "detail";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getList";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "creator";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "decimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "uint40";
            readonly name: "createdAt";
            readonly type: "uint40";
        }, {
            readonly internalType: "uint128";
            readonly name: "currentSupply";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "maxSupply";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "priceForNextMint";
            readonly type: "uint128";
        }, {
            readonly internalType: "address";
            readonly name: "reserveToken";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "reserveDecimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "string";
            readonly name: "reserveSymbol";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "reserveName";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "reserveBalance";
            readonly type: "uint256";
        }];
        readonly internalType: "struct MCV2_Bond.BondInfo[]";
        readonly name: "info";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokensToBurn";
        readonly type: "uint256";
    }];
    readonly name: "getRefundForTokens";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "refundAmount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "royalty";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokensToMint";
        readonly type: "uint256";
    }];
    readonly name: "getReserveForToken";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "reserveAmount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "royalty";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "wallet";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }];
    readonly name: "getRoyaltyInfo";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "getSteps";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint128";
            readonly name: "rangeTo";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "price";
            readonly type: "uint128";
        }];
        readonly internalType: "struct MCV2_Bond.BondStep[]";
        readonly name: "";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getTokensByCreator";
    readonly outputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "addresses";
        readonly type: "address[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getTokensByReserveToken";
    readonly outputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "addresses";
        readonly type: "address[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "maxRoyaltyRange";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "maxSupply";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokensToMint";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "maxReserveAmount";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "mint";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "priceForNextMint";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "protocolBeneficiary";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly name: "tokenBond";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly internalType: "uint16";
        readonly name: "mintRoyalty";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "burnRoyalty";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint40";
        readonly name: "createdAt";
        readonly type: "uint40";
    }, {
        readonly internalType: "address";
        readonly name: "reserveToken";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "reserveBalance";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "tokenCount";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly name: "tokens";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }];
    readonly name: "updateBondCreator";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "updateCreationFee";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "ratio";
        readonly type: "uint256";
    }];
    readonly name: "updateMaxRoyaltyRange";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "protocolBeneficiary_";
        readonly type: "address";
    }];
    readonly name: "updateProtocolBeneficiary";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly name: "userTokenRoyaltyBalance";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly name: "userTokenRoyaltyClaimed";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "version";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}];

declare const ERC1155_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "balance";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "needed";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "ERC1155InsufficientBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "approver";
        readonly type: "address";
    }];
    readonly name: "ERC1155InvalidApprover";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "idsLength";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "valuesLength";
        readonly type: "uint256";
    }];
    readonly name: "ERC1155InvalidArrayLength";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }];
    readonly name: "ERC1155InvalidOperator";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "ERC1155InvalidReceiver";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }];
    readonly name: "ERC1155InvalidSender";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }];
    readonly name: "ERC1155MissingApprovalForAll";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_MultiToken__AlreadyInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_MultiToken__BurnAmountExceedsTotalSupply";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_MultiToken__NotApproved";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_MultiToken__PermissionDenied";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "approved";
        readonly type: "bool";
    }];
    readonly name: "ApprovalForAll";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "values";
        readonly type: "uint256[]";
    }];
    readonly name: "TransferBatch";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "TransferSingle";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "value";
        readonly type: "string";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "URI";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "accounts";
        readonly type: "address[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }];
    readonly name: "balanceOfBatch";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "bond";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "burnByBond";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "contractURI";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "";
        readonly type: "uint8";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "name_";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "symbol_";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "uri_";
        readonly type: "string";
    }];
    readonly name: "init";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }];
    readonly name: "isApprovedForAll";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "mintByBond";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "values";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "bytes";
        readonly name: "data";
        readonly type: "bytes";
    }];
    readonly name: "safeBatchTransferFrom";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "data";
        readonly type: "bytes";
    }];
    readonly name: "safeTransferFrom";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "operator";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "approved";
        readonly type: "bool";
    }];
    readonly name: "setApprovalForAll";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes4";
        readonly name: "interfaceId";
        readonly type: "bytes4";
    }];
    readonly name: "supportsInterface";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly name: "uri";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];

declare const ERC20_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "allowance";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "needed";
        readonly type: "uint256";
    }];
    readonly name: "ERC20InsufficientAllowance";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "balance";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "needed";
        readonly type: "uint256";
    }];
    readonly name: "ERC20InsufficientBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "approver";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidApprover";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidReceiver";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidSender";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidSpender";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Token__AlreadyInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_Token__PermissionDenied";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "Approval";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "Transfer";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }];
    readonly name: "allowance";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "bond";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "burnByBond";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "";
        readonly type: "uint8";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "name_";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "symbol_";
        readonly type: "string";
    }];
    readonly name: "init";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "mintByBond";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];

declare const LOCKER_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "target";
        readonly type: "address";
    }];
    readonly name: "AddressEmptyCode";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "AddressInsufficientBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "FailedInnerCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LockUp__AlreadyClaimed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LockUp__InvalidPaginationParameters";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "param";
        readonly type: "string";
    }];
    readonly name: "LockUp__InvalidParams";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LockUp__NotYetUnlocked";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LockUp__PermissionDenied";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "SafeERC20FailedOperation";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "lockUpId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint40";
        readonly name: "unlockTime";
        readonly type: "uint40";
    }];
    readonly name: "LockedUp";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "lockUpId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "Unlocked";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint40";
        readonly name: "unlockTime";
        readonly type: "uint40";
    }, {
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly internalType: "string";
        readonly name: "title";
        readonly type: "string";
    }];
    readonly name: "createLockUp";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getLockUpIdsByReceiver";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getLockUpIdsByToken";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "lockUpCount";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly name: "lockUps";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly internalType: "uint40";
        readonly name: "unlockTime";
        readonly type: "uint40";
    }, {
        readonly internalType: "bool";
        readonly name: "unlocked";
        readonly type: "bool";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly internalType: "string";
        readonly name: "title";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "";
        readonly type: "bytes";
    }];
    readonly name: "onERC1155Received";
    readonly outputs: readonly [{
        readonly internalType: "bytes4";
        readonly name: "";
        readonly type: "bytes4";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "lockUpId";
        readonly type: "uint256";
    }];
    readonly name: "unlock";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];

declare const MERKLE_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "target";
        readonly type: "address";
    }];
    readonly name: "AddressEmptyCode";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "AddressInsufficientBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "FailedInnerCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__AlreadyClaimed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__AlreadyRefunded";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__Finished";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__InvalidCaller";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__InvalidPaginationParameters";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "param";
        readonly type: "string";
    }];
    readonly name: "MerkleDistributor__InvalidParams";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__InvalidProof";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__NoClaimableTokensLeft";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__NotStarted";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__NothingToRefund";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__PermissionDenied";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MerkleDistributor__Refunded";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "SafeERC20FailedOperation";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "Claimed";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly indexed: false;
        readonly internalType: "uint40";
        readonly name: "startTime";
        readonly type: "uint40";
    }];
    readonly name: "Created";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "Refunded";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes32[]";
        readonly name: "merkleProof";
        readonly type: "bytes32[]";
    }];
    readonly name: "claim";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly internalType: "uint176";
        readonly name: "amountPerClaim";
        readonly type: "uint176";
    }, {
        readonly internalType: "uint40";
        readonly name: "walletCount";
        readonly type: "uint40";
    }, {
        readonly internalType: "uint40";
        readonly name: "startTime";
        readonly type: "uint40";
    }, {
        readonly internalType: "uint40";
        readonly name: "endTime";
        readonly type: "uint40";
    }, {
        readonly internalType: "bytes32";
        readonly name: "merkleRoot";
        readonly type: "bytes32";
    }, {
        readonly internalType: "string";
        readonly name: "title";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "ipfsCID";
        readonly type: "string";
    }];
    readonly name: "createDistribution";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "distributionCount";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly name: "distributions";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "isERC20";
        readonly type: "bool";
    }, {
        readonly internalType: "uint40";
        readonly name: "walletCount";
        readonly type: "uint40";
    }, {
        readonly internalType: "uint40";
        readonly name: "claimedCount";
        readonly type: "uint40";
    }, {
        readonly internalType: "uint176";
        readonly name: "amountPerClaim";
        readonly type: "uint176";
    }, {
        readonly internalType: "uint40";
        readonly name: "startTime";
        readonly type: "uint40";
    }, {
        readonly internalType: "uint40";
        readonly name: "endTime";
        readonly type: "uint40";
    }, {
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "uint40";
        readonly name: "refundedAt";
        readonly type: "uint40";
    }, {
        readonly internalType: "bytes32";
        readonly name: "merkleRoot";
        readonly type: "bytes32";
    }, {
        readonly internalType: "string";
        readonly name: "title";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "ipfsCID";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }];
    readonly name: "getAmountClaimed";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }];
    readonly name: "getAmountLeft";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getDistributionIdsByOwner";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "start";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "stop";
        readonly type: "uint256";
    }];
    readonly name: "getDistributionIdsByToken";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "wallet";
        readonly type: "address";
    }];
    readonly name: "isClaimed";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }];
    readonly name: "isWhitelistOnly";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "wallet";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32[]";
        readonly name: "merkleProof";
        readonly type: "bytes32[]";
    }];
    readonly name: "isWhitelisted";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "";
        readonly type: "bytes";
    }];
    readonly name: "onERC1155Received";
    readonly outputs: readonly [{
        readonly internalType: "bytes4";
        readonly name: "";
        readonly type: "bytes4";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "distributionId";
        readonly type: "uint256";
    }];
    readonly name: "refund";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];

declare const ZAP_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "bondAddress";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "wethAddress";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "target";
        readonly type: "address";
    }];
    readonly name: "AddressEmptyCode";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "AddressInsufficientBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "FailedInnerCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_ZapV1__EthTransferFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_ZapV1__InvalidReceiver";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_ZapV1__ReserveIsNotWETH";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "MCV2_ZapV1__SlippageLimitExceeded";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }];
    readonly name: "OwnableInvalidOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "OwnableUnauthorizedAccount";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "SafeERC20FailedOperation";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "previousOwner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "OwnershipTransferred";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "BOND";
    readonly outputs: readonly [{
        readonly internalType: "contract MCV2_Bond";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "WETH";
    readonly outputs: readonly [{
        readonly internalType: "contract IWETH";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokensToBurn";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "minRefund";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "burnToEth";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokensToMint";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "mintWithEth";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "receiver";
        readonly type: "address";
    }];
    readonly name: "rescueETH";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly stateMutability: "payable";
    readonly type: "receive";
}];

type BondErrorNames = ExtractAbiErrorNames<typeof BOND_ABI>;
type ERC20ErrorNames = ExtractAbiErrorNames<typeof ERC20_ABI>;
type ERC1155ErrorNames = ExtractAbiErrorNames<typeof ERC1155_ABI>;
type LockerErrorNames = ExtractAbiErrorNames<typeof LOCKER_ABI>;
type MerkleErrorNames = ExtractAbiErrorNames<typeof MERKLE_ABI>;
type ZapErrorNames = ExtractAbiErrorNames<typeof ZAP_ABI>;
type AllContractErrorNames = BondErrorNames | ERC20ErrorNames | ERC1155ErrorNames | LockerErrorNames | MerkleErrorNames | ZapErrorNames;

declare const ONEINCH_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "contract MultiWrapper";
        readonly name: "_multiWrapper";
        readonly type: "address";
    }, {
        readonly internalType: "contract IOracle[]";
        readonly name: "existingOracles";
        readonly type: "address[]";
    }, {
        readonly internalType: "enum OffchainOracle.OracleType[]";
        readonly name: "oracleTypes";
        readonly type: "uint8[]";
    }, {
        readonly internalType: "contract IERC20[]";
        readonly name: "existingConnectors";
        readonly type: "address[]";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "wBase";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [];
    readonly name: "ArraysLengthMismatch";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "ConnectorAlreadyAdded";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "InvalidOracleTokenKind";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OracleAlreadyAdded";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SameTokens";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "TooBigThreshold";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "UnknownConnector";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "UnknownOracle";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "contract IERC20";
        readonly name: "connector";
        readonly type: "address";
    }];
    readonly name: "ConnectorAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "contract IERC20";
        readonly name: "connector";
        readonly type: "address";
    }];
    readonly name: "ConnectorRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "contract MultiWrapper";
        readonly name: "multiWrapper";
        readonly type: "address";
    }];
    readonly name: "MultiWrapperUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "contract IOracle";
        readonly name: "oracle";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "enum OffchainOracle.OracleType";
        readonly name: "oracleType";
        readonly type: "uint8";
    }];
    readonly name: "OracleAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "contract IOracle";
        readonly name: "oracle";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "enum OffchainOracle.OracleType";
        readonly name: "oracleType";
        readonly type: "uint8";
    }];
    readonly name: "OracleRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "previousOwner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "OwnershipTransferred";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "connector";
        readonly type: "address";
    }];
    readonly name: "addConnector";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IOracle";
        readonly name: "oracle";
        readonly type: "address";
    }, {
        readonly internalType: "enum OffchainOracle.OracleType";
        readonly name: "oracleKind";
        readonly type: "uint8";
    }];
    readonly name: "addOracle";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "connectors";
    readonly outputs: readonly [{
        readonly internalType: "contract IERC20[]";
        readonly name: "allConnectors";
        readonly type: "address[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "srcToken";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "dstToken";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "useWrappers";
        readonly type: "bool";
    }];
    readonly name: "getRate";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "weightedRate";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "srcToken";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "useSrcWrappers";
        readonly type: "bool";
    }];
    readonly name: "getRateToEth";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "weightedRate";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "srcToken";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "useSrcWrappers";
        readonly type: "bool";
    }, {
        readonly internalType: "contract IERC20[]";
        readonly name: "customConnectors";
        readonly type: "address[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "thresholdFilter";
        readonly type: "uint256";
    }];
    readonly name: "getRateToEthWithCustomConnectors";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "weightedRate";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "srcToken";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "useSrcWrappers";
        readonly type: "bool";
    }, {
        readonly internalType: "uint256";
        readonly name: "thresholdFilter";
        readonly type: "uint256";
    }];
    readonly name: "getRateToEthWithThreshold";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "weightedRate";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "srcToken";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "dstToken";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "useWrappers";
        readonly type: "bool";
    }, {
        readonly internalType: "contract IERC20[]";
        readonly name: "customConnectors";
        readonly type: "address[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "thresholdFilter";
        readonly type: "uint256";
    }];
    readonly name: "getRateWithCustomConnectors";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "weightedRate";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "srcToken";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "dstToken";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "useWrappers";
        readonly type: "bool";
    }, {
        readonly internalType: "uint256";
        readonly name: "thresholdFilter";
        readonly type: "uint256";
    }];
    readonly name: "getRateWithThreshold";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "weightedRate";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "multiWrapper";
    readonly outputs: readonly [{
        readonly internalType: "contract MultiWrapper";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "oracles";
    readonly outputs: readonly [{
        readonly internalType: "contract IOracle[]";
        readonly name: "allOracles";
        readonly type: "address[]";
    }, {
        readonly internalType: "enum OffchainOracle.OracleType[]";
        readonly name: "oracleTypes";
        readonly type: "uint8[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "connector";
        readonly type: "address";
    }];
    readonly name: "removeConnector";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IOracle";
        readonly name: "oracle";
        readonly type: "address";
    }, {
        readonly internalType: "enum OffchainOracle.OracleType";
        readonly name: "oracleKind";
        readonly type: "uint8";
    }];
    readonly name: "removeOracle";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract MultiWrapper";
        readonly name: "_multiWrapper";
        readonly type: "address";
    }];
    readonly name: "setMultiWrapper";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];

declare const SDK_CONTRACT_ADDRESSES: {
    readonly ERC20: {
        readonly 1: "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df";
        readonly 10: "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df";
        readonly 42161: "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df";
        readonly 43114: "0x5DaE94e149CF2112Ec625D46670047814aA9aC2a";
        readonly 137: "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df";
        readonly 56: "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df";
        readonly 8453: "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df";
        readonly 11155111: "0x749bA94344521727f55a3007c777FbeB5F52C2Eb";
        readonly 81457: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 168587773: "0x37F540de37afE8bDf6C722d87CB019F30e5E406a";
        readonly 43113: "0xAD5a113ee65F30269f7558f96483126B1FB60c4E";
    };
    readonly ERC1155: {
        readonly 1: "0x6c61918eECcC306D35247338FDcf025af0f6120A";
        readonly 10: "0x6c61918eECcC306D35247338FDcf025af0f6120A";
        readonly 42161: "0x6c61918eECcC306D35247338FDcf025af0f6120A";
        readonly 43114: "0x621c335b4BD8f2165E120DC70d3AfcAfc6628681";
        readonly 137: "0x6c61918eECcC306D35247338FDcf025af0f6120A";
        readonly 56: "0x6c61918eECcC306D35247338FDcf025af0f6120A";
        readonly 8453: "0x6c61918eECcC306D35247338FDcf025af0f6120A";
        readonly 11155111: "0x3cABE5125C5D8922c5f38c5b779F6E96F563cdc0";
        readonly 81457: "0x5DaE94e149CF2112Ec625D46670047814aA9aC2a";
        readonly 168587773: "0x4bF67e5C9baD43DD89dbe8fCAD3c213C868fe881";
        readonly 43113: "0xB43826E079dFB2e2b48a0a473Efc7F1fe6391763";
    };
    readonly BOND: {
        readonly 1: "0xc5a076cad94176c2996B32d8466Be1cE757FAa27";
        readonly 10: "0xc5a076cad94176c2996B32d8466Be1cE757FAa27";
        readonly 42161: "0xc5a076cad94176c2996B32d8466Be1cE757FAa27";
        readonly 43114: "0x3Fd5B4DcDa968C8e22898523f5343177F94ccfd1";
        readonly 137: "0xc5a076cad94176c2996B32d8466Be1cE757FAa27";
        readonly 56: "0xc5a076cad94176c2996B32d8466Be1cE757FAa27";
        readonly 8453: "0xc5a076cad94176c2996B32d8466Be1cE757FAa27";
        readonly 11155111: "0x8dce343A86Aa950d539eeE0e166AFfd0Ef515C0c";
        readonly 81457: "0x621c335b4BD8f2165E120DC70d3AfcAfc6628681";
        readonly 168587773: "0x5dfA75b0185efBaEF286E80B847ce84ff8a62C2d";
        readonly 43113: "0x20fBC8a650d75e4C2Dab8b7e85C27135f0D64e89";
    };
    readonly ZAP: {
        readonly 1: "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa";
        readonly 10: "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa";
        readonly 42161: "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa";
        readonly 43114: "0x29b0E6D2C2884aEa3FB4CB5dD1C7002A8E10c724";
        readonly 137: "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa";
        readonly 56: "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa";
        readonly 8453: "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa";
        readonly 11155111: "0x1Bf3183acc57571BecAea0E238d6C3A4d00633da";
        readonly 81457: "0x06FD26c092Db44E5491abB7cDC580CE24D93030c";
        readonly 168587773: "0x40c7DC399e01029a51cAb316f8Bca7D20DE31bad";
        readonly 43113: "0x60432191893c4F742205a2C834817a1891feC435";
    };
    readonly LOCKER: {
        readonly 1: "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6";
        readonly 10: "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6";
        readonly 42161: "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6";
        readonly 43114: "0x5b64cECC5cF3E4B1A668Abd895D16BdDC0c77a17";
        readonly 137: "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6";
        readonly 56: "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6";
        readonly 8453: "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6";
        readonly 11155111: "0x7c204B1B03A88D24088941068f6DFC809f2fd022";
        readonly 81457: "0x3Fd5B4DcDa968C8e22898523f5343177F94ccfd1";
        readonly 168587773: "0x2c6B3fe4D6de27363cFEC95f703889EaF6b770fB";
        readonly 43113: "0x789771E410527691729e54A84103594ee6Be6C3C";
    };
    readonly MERKLE: {
        readonly 1: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 10: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 42161: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 43114: "0x841A2bD2fc97DCB865b4Ddb352540148Bad2dB09";
        readonly 137: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 56: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 8453: "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4";
        readonly 11155111: "0x0CD940395566d509168977Cf10E5296302efA57A";
        readonly 81457: "0x29b0E6D2C2884aEa3FB4CB5dD1C7002A8E10c724";
        readonly 168587773: "0xCbb23973235feA43E62C41a0c67717a92a2467f2";
        readonly 43113: "0x6d1f4ecd17ddA7fb39C56Da566b66d63f06671d9";
    };
    readonly ONEINCH: {
        readonly 1: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 10: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 42161: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 43114: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 137: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 56: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 8453: "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8";
        readonly 11155111: "0x";
        readonly 81457: "0x";
        readonly 168587773: "0x";
        readonly 43113: "0x";
    };
};
declare function getMintClubContractAddress(contractName: ContractNames, chainId: SdkSupportedChainIds): "0xAa70bC79fD1cB4a6FBA717018351F0C3c64B79Df" | "0x5DaE94e149CF2112Ec625D46670047814aA9aC2a" | "0x749bA94344521727f55a3007c777FbeB5F52C2Eb" | "0x1349A9DdEe26Fe16D0D44E35B3CB9B0CA18213a4" | "0x37F540de37afE8bDf6C722d87CB019F30e5E406a" | "0xAD5a113ee65F30269f7558f96483126B1FB60c4E" | "0x6c61918eECcC306D35247338FDcf025af0f6120A" | "0x621c335b4BD8f2165E120DC70d3AfcAfc6628681" | "0x3cABE5125C5D8922c5f38c5b779F6E96F563cdc0" | "0x4bF67e5C9baD43DD89dbe8fCAD3c213C868fe881" | "0xB43826E079dFB2e2b48a0a473Efc7F1fe6391763" | "0xc5a076cad94176c2996B32d8466Be1cE757FAa27" | "0x3Fd5B4DcDa968C8e22898523f5343177F94ccfd1" | "0x8dce343A86Aa950d539eeE0e166AFfd0Ef515C0c" | "0x5dfA75b0185efBaEF286E80B847ce84ff8a62C2d" | "0x20fBC8a650d75e4C2Dab8b7e85C27135f0D64e89" | "0x91523b39813F3F4E406ECe406D0bEAaA9dE251fa" | "0x29b0E6D2C2884aEa3FB4CB5dD1C7002A8E10c724" | "0x1Bf3183acc57571BecAea0E238d6C3A4d00633da" | "0x06FD26c092Db44E5491abB7cDC580CE24D93030c" | "0x40c7DC399e01029a51cAb316f8Bca7D20DE31bad" | "0x60432191893c4F742205a2C834817a1891feC435" | "0xA3dCf3Ca587D9929d540868c924f208726DC9aB6" | "0x5b64cECC5cF3E4B1A668Abd895D16BdDC0c77a17" | "0x7c204B1B03A88D24088941068f6DFC809f2fd022" | "0x2c6B3fe4D6de27363cFEC95f703889EaF6b770fB" | "0x789771E410527691729e54A84103594ee6Be6C3C" | "0x841A2bD2fc97DCB865b4Ddb352540148Bad2dB09" | "0x0CD940395566d509168977Cf10E5296302efA57A" | "0xCbb23973235feA43E62C41a0c67717a92a2467f2" | "0x6d1f4ecd17ddA7fb39C56Da566b66d63f06671d9" | "0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8" | "0x";
type ExcludeValue<T, V> = T extends V ? never : T;
type ExtractChainIds<T> = T extends {
    [key: string]: infer U;
} ? U extends {
    [key: number]: any;
} ? keyof U : never : never;
type ContractNames = keyof typeof SDK_CONTRACT_ADDRESSES;
type SdkSupportedChainIds = ExtractChainIds<typeof SDK_CONTRACT_ADDRESSES>;
type TokenType = 'ERC20' | 'ERC1155';
type MainnetChain = ExcludeValue<SdkSupportedChainIds, typeof sepolia.id | typeof blastSepolia.id | typeof avalancheFuji.id>;

type ChainType = {
    readonly id: SdkSupportedChainIds;
    readonly name: 'Ethereum' | 'Base' | 'Blast' | 'Optimism' | 'Arbitrum' | 'Avalanche' | 'Polygon' | 'BNBChain' | 'Sepolia' | 'AvalancheFuji' | 'BlastSepolia';
    readonly icon: string;
    readonly color: string;
    readonly openseaSlug?: string;
    readonly isTestnet?: boolean;
    readonly enabled?: boolean;
};
declare const CHAINS: Array<ChainType>;
type LowerCaseChainNames = (typeof CHAINS)[number]['name'] extends infer X ? X extends string ? Lowercase<X> : never : never;
declare function chainIdToString(chainId: number): "ethereum" | "sepolia" | "bnbchain" | "polygon" | "arbitrum" | "optimism" | "avalanche" | "base" | "blast" | "avalanchefuji" | "blastsepolia";
declare function chainStringToId(name: LowerCaseChainNames): 1 | 10 | 42161 | 43114 | 137 | 56 | 8453 | 11155111 | 81457 | 168587773 | 43113;
declare function getChain(chainId: SdkSupportedChainIds): {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://etherscan.io";
            readonly apiUrl: "https://api.etherscan.io/api";
        };
    };
    contracts: {
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
        };
        readonly ensUniversalResolver: {
            readonly address: "0xce01f8eee7E479C928F8919abD53E553a36CeF67";
            readonly blockCreated: 19258213;
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 14353601;
        };
    };
    id: 1;
    name: "Ethereum";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://cloudflare-eth.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Optimism Explorer";
            readonly url: "https://optimistic.etherscan.io";
            readonly apiUrl: "https://api-optimistic.etherscan.io";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0xdfe97868233d1aa22e815a266982f2cf17685a27";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 4286263;
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed";
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 10;
    name: "OP Mainnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.optimism.io"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Arbiscan";
            readonly url: "https://arbiscan.io";
            readonly apiUrl: "https://api.arbiscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 7654707;
        };
    };
    id: 42161;
    name: "Arbitrum One";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://arb1.arbitrum.io/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SnowScan";
            readonly url: "https://snowscan.xyz";
            readonly apiUrl: "https://api.snowscan.xyz/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 11907934;
        };
    };
    id: 43114;
    name: "Avalanche";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Avalanche";
        readonly symbol: "AVAX";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.avax.network/ext/bc/C/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PolygonScan";
            readonly url: "https://polygonscan.com";
            readonly apiUrl: "https://api.polygonscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 25770160;
        };
    };
    id: 137;
    name: "Polygon";
    nativeCurrency: {
        readonly name: "MATIC";
        readonly symbol: "MATIC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://polygon-rpc.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BscScan";
            readonly url: "https://bscscan.com";
            readonly apiUrl: "https://api.bscscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 15921452;
        };
    };
    id: 56;
    name: "BNB Smart Chain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "BNB";
        readonly symbol: "BNB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ankr.com/bsc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Basescan";
            readonly url: "https://basescan.org";
            readonly apiUrl: "https://api.basescan.org/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0x56315b90c40730925ec5485cf004d835058518A0";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 5022;
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e";
                readonly blockCreated: 17482143;
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35";
                readonly blockCreated: 17482143;
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 8453;
    name: "Base";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.base.org"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://sepolia.etherscan.io";
            readonly apiUrl: "https://api-sepolia.etherscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 751532;
        };
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
        };
        readonly ensUniversalResolver: {
            readonly address: "0xc8Af999e38273D658BE1b921b88A9Ddf005769cC";
            readonly blockCreated: 5317080;
        };
    };
    id: 11155111;
    name: "Sepolia";
    nativeCurrency: {
        readonly name: "Sepolia Ether";
        readonly symbol: "SEP";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.sepolia.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blastscan";
            readonly url: "https://blastscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 212929;
        };
    };
    id: 81457;
    name: "Blast";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.blast.io"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blastscan";
            readonly url: "https://testnet.blastscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 756690;
        };
    };
    id: 168587773;
    name: "Blast Sepolia";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.blast.io"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SnowScan";
            readonly url: "https://testnet.snowscan.xyz";
            readonly apiUrl: "https://api-testnet.snowscan.xyz";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 7096959;
        };
    };
    id: 43113;
    name: "Avalanche Fuji";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Avalanche Fuji";
        readonly symbol: "AVAX";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.avax-test.network/ext/bc/C/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Acala Blockscout";
            readonly url: "https://blockscout.acala.network";
            readonly apiUrl: "https://blockscout.acala.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 787;
    name: "Acala";
    nativeCurrency: {
        readonly name: "Acala";
        readonly symbol: "ACA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly public: {
            readonly http: readonly ["https://eth-rpc-acala.aca-api.network"];
            readonly webSocket: readonly ["wss://eth-rpc-acala.aca-api.network"];
        };
        readonly default: {
            readonly http: readonly ["https://eth-rpc-acala.aca-api.network"];
            readonly webSocket: readonly ["wss://eth-rpc-acala.aca-api.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "acala";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ancient8 explorer";
            readonly url: "https://scan.ancient8.gg";
            readonly apiUrl: "https://scan.ancient8.gg/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0xB09DC08428C8b4EFB4ff9C0827386CDF34277996";
            };
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68";
                readonly blockCreated: 19070571;
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0xd5e3eDf5b68135D559D572E26bF863FBC1950033";
                readonly blockCreated: 19070571;
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 888888888;
    name: "Ancient8";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ancient8.gg"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ancient8 Celestia Testnet explorer";
            readonly url: "https://scanv2-testnet.ancient8.gg";
            readonly apiUrl: "https://scanv2-testnet.ancient8.gg/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0x942fD5017c0F60575930D8574Eaca13BEcD6e1bB";
            };
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0xfa1d9E26A6aCD7b22115D27572c1221B9803c960";
                readonly blockCreated: 4972908;
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0xF6Bc0146d3c74D48306e79Ae134A260E418C9335";
                readonly blockCreated: 4972908;
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 28122024;
    name: "Ancient8 Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpcv2-testnet.ancient8.gg"];
        };
    };
    sourceId: 11155111;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers?: {
        [key: string]: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
        default: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
    } | undefined;
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 31337;
    name: "Anvil";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
            readonly webSocket: readonly ["ws://127.0.0.1:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://exp-testnet.apexlayer.xyz";
            readonly apiUrl: "https://exp-testnet.apexlayer.xyz/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xf7642be33a6b18D16a995657adb5a68CD0438aE2";
            readonly blockCreated: 283775;
        };
    };
    id: 3993;
    name: "APEX Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc-testnet.apexlayer.xyz"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Arbiscan";
            readonly url: "https://goerli.arbiscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 88114;
        };
    };
    id: 421613;
    name: "Arbitrum Goerli";
    nativeCurrency: {
        readonly name: "Arbitrum Goerli Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://goerli-rollup.arbitrum.io/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Arbiscan";
            readonly url: "https://nova.arbiscan.io";
            readonly apiUrl: "https://api-nova.arbiscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 1746963;
        };
    };
    id: 42170;
    name: "Arbitrum Nova";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://nova.arbitrum.io/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Astar Subscan";
            readonly url: "https://astar.subscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 761794;
        };
    };
    id: 592;
    name: "Astar";
    nativeCurrency: {
        readonly name: "Astar";
        readonly symbol: "ASTR";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://astar.api.onfinality.io/public"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "astar-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Astar zkEVM Explorer";
            readonly url: "https://astar-zkevm.explorer.startale.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x36eabf148272BA81A5225C6a3637972F0EE17771";
            readonly blockCreated: 93528;
        };
    };
    id: 3776;
    name: "Astar zkEVM";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.startale.com/astar-zkevm"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "AstarZkEVM";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "zKyoto Explorer";
            readonly url: "https://astar-zkyoto.blockscout.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 196153;
        };
    };
    id: 6038361;
    name: "Astar zkEVM Testnet zKyoto";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.startale.com/zkyoto"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zKyoto";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Arbiscan";
            readonly url: "https://sepolia.arbiscan.io";
            readonly apiUrl: "https://sepolia.arbiscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 81930;
        };
    };
    id: 421614;
    name: "Arbitrum Sepolia";
    nativeCurrency: {
        readonly name: "Arbitrum Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "zKatana Explorer";
            readonly url: "https://zkatana.explorer.startale.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 31317;
        };
    };
    id: 1261120;
    name: "Astar zkEVM Testnet zKatana";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.zkatana.gelato.digital", "https://rpc.startale.com/zkatana"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zKatana";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Aurorascan";
            readonly url: "https://aurorascan.dev";
            readonly apiUrl: "https://aurorascan.dev/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 62907816;
        };
    };
    id: 1313161554;
    name: "Aurora";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.aurora.dev"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Aurorascan";
            readonly url: "https://testnet.aurorascan.dev";
            readonly apiUrl: "https://testnet.aurorascan.dev/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1313161555;
    name: "Aurora Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.aurora.dev"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Auroria Testnet Explorer";
            readonly url: "https://auroria.explorer.stratisevm.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 205205;
    name: "Auroria Testnet";
    nativeCurrency: {
        readonly name: "Auroria Stratis";
        readonly symbol: "tSTRAX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://auroria.rpc.stratisevm.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "auroria";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ftnscan";
            readonly url: "https://www.ftnscan.com";
            readonly apiUrl: "https://www.ftnscan.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 5165;
    name: "Bahamut";
    nativeCurrency: {
        readonly name: "Fasttoken";
        readonly symbol: "FTN";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc1.bahamut.io", "https://bahamut.publicnode.com", "https://rpc2.bahamut.io"];
            readonly webSocket: readonly ["wss://ws1.sahara.bahamutchain.com", "wss://bahamut.publicnode.com", "wss://ws2.sahara.bahamutchain.com"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc1.bahamut.io", "https://bahamut.publicnode.com", "https://rpc2.bahamut.io"];
            readonly webSocket: readonly ["wss://ws1.sahara.bahamutchain.com", "wss://bahamut.publicnode.com", "wss://ws2.sahara.bahamutchain.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "bahamut";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Basescan";
            readonly url: "https://goerli.basescan.org";
            readonly apiUrl: "https://goerli.basescan.org/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 5: {
                readonly address: "0x2A35891ff30313CcFa6CE88dcf3858bb075A2298";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 1376988;
        };
        readonly portal: {
            readonly 5: {
                readonly address: "0xe93c8cD0D409341205A592f8c4Ac1A5fe5585cfA";
            };
        };
        readonly l1StandardBridge: {
            readonly 5: {
                readonly address: "0xfA6D8Ee5BE770F84FC001D098C4bD604Fe01284a";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 84531;
    name: "Base Goerli";
    nativeCurrency: {
        readonly name: "Goerli Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://goerli.base.org"];
        };
    };
    sourceId: 5;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Basescan";
            readonly url: "https://sepolia.basescan.org";
            readonly apiUrl: "https://api-sepolia.basescan.org/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254";
            };
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0x49f53e41452c74589e85ca1677426ba426459e85";
                readonly blockCreated: 4446677;
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120";
                readonly blockCreated: 4446677;
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 1059647;
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 84532;
    name: "Base Sepolia";
    nativeCurrency: {
        readonly name: "Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.base.org"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "base-sepolia";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Beam Explorer";
            readonly url: "https://subnets.avax.network/beam";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x4956f15efdc3dc16645e90cc356eafa65ffc65ec";
            readonly blockCreated: 1;
        };
    };
    id: 4337;
    name: "Beam";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Beam";
        readonly symbol: "BEAM";
    };
    rpcUrls: {
        readonly public: {
            readonly http: readonly ["https://build.onbeam.com/rpc"];
        };
        readonly default: {
            readonly http: readonly ["https://build.onbeam.com/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "beam";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Beam Explorer";
            readonly url: "https://subnets-test.avax.network/beam";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x9bf49b704ee2a095b95c1f2d4eb9010510c41c9e";
            readonly blockCreated: 3;
        };
    };
    id: 13337;
    name: "Beam Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Beam";
        readonly symbol: "BEAM";
    };
    rpcUrls: {
        readonly public: {
            readonly http: readonly ["https://build.onbeam.com/rpc/testnet"];
        };
        readonly default: {
            readonly http: readonly ["https://build.onbeam.com/rpc/testnet"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "beam";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BrnkScan";
            readonly url: "https://brnkscan.bearnetwork.net";
            readonly apiUrl: "https://brnkscan.bearnetwork.net/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 641230;
    name: "Bear Network Chain Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "BearNetworkChain";
        readonly symbol: "BRNKC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://brnkc-mainnet.bearnetwork.net"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BrnkTestScan";
            readonly url: "https://brnktest-scan.bearnetwork.net";
            readonly apiUrl: "https://brnktest-scan.bearnetwork.net/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 751230;
    name: "Bear Network Chain Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "tBRNKC";
        readonly symbol: "tBRNKC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://brnkc-test.bearnetwork.net"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Berachain";
            readonly url: "https://artio.beratrail.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 80085;
    name: "Berachain Artio";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "BERA Token";
        readonly symbol: "BERA";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://artio.rpc.berachain.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Bttcscan";
            readonly url: "https://bttcscan.com";
            readonly apiUrl: "https://api.bttcscan.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 199;
    name: "BitTorrent";
    nativeCurrency: {
        readonly name: "BitTorrent";
        readonly symbol: "BTT";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.bittorrentchain.io"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc.bittorrentchain.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "bittorrent-chain-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Bttcscan";
            readonly url: "https://testnet.bttcscan.com";
            readonly apiUrl: "https://testnet.bttcscan.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1028;
    name: "BitTorrent Chain Testnet";
    nativeCurrency: {
        readonly name: "BitTorrent";
        readonly symbol: "BTT";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testrpc.bittorrentchain.io"];
        };
        readonly public: {
            readonly http: readonly ["https://testrpc.bittorrentchain.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "bittorrent-chain-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BOBAScan";
            readonly url: "https://bobascan.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 446859;
        };
    };
    id: 288;
    name: "Boba Network";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Boba";
        readonly symbol: "BOBA";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.boba.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BronoScan";
            readonly url: "https://broscan.bronos.org";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1039;
    name: "Bronos";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "BRO";
        readonly symbol: "BRO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm.bronos.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BronoScan";
            readonly url: "https://tbroscan.bronos.org";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1038;
    name: "Bronos Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Bronos Coin";
        readonly symbol: "tBRO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm-testnet.bronos.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BscScan";
            readonly url: "https://testnet.bscscan.com";
            readonly apiUrl: "https://testnet.bscscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 17422483;
        };
    };
    id: 97;
    name: "Binance Smart Chain Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "BNB";
        readonly symbol: "tBNB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://data-seed-prebsc-1-s1.bnbchain.org:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "BNB Greenfield Mainnet Scan";
            readonly url: "https://greenfieldscan.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1017;
    name: "BNB Greenfield Chain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "BNB";
        readonly symbol: "BNB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://greenfield-chain.bnbchain.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://explorer.blackfort.network";
            readonly apiUrl: "https://explorer.blackfort.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 4999;
    name: "BlackFort Exchange Network";
    nativeCurrency: {
        readonly name: "BlackFort Token";
        readonly symbol: "BXN";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.blackfort.network/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://testnet-explorer.blackfort.network";
            readonly apiUrl: "https://testnet-explorer.blackfort.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 4777;
    name: "BlackFort Exchange Network Testnet";
    nativeCurrency: {
        readonly name: "BlackFort Testnet Token";
        readonly symbol: "TBXN";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.blackfort.network/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Tuber.Build (Blockscout)";
            readonly url: "https://tuber.build";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 2905789;
        };
    };
    id: 7700;
    name: "Canto";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Canto";
        readonly symbol: "CANTO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://canto.gravitychain.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Celo Explorer";
            readonly url: "https://explorer.celo.org/mainnet";
            readonly apiUrl: "https://explorer.celo.org/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 13112599;
        };
    };
    id: 42220;
    name: "Celo";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CELO";
        readonly symbol: "CELO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://forno.celo.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.CeloBlockOverrides & {
                transactions: `0x${string}`[] | chains.CeloRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.CeloTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
                randomness: {
                    committed: `0x${string}`;
                    revealed: `0x${string}`;
                };
            } & {
                nonce: never;
                difficulty: never;
                gasLimit: never;
                mixHash: never;
                uncles: never;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            };
            type: "transaction";
        };
        readonly transactionRequest: {
            exclude: [] | undefined;
            format: (args: ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas: bigint;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "eip4844" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            })) => {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: `0x${string}`;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x3" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            };
            type: "transactionRequest";
        };
    };
    serializers: {
        readonly transaction: typeof viem__types_chains_celo_serializers.serializeTransaction;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Celo Explorer";
            readonly url: "https://explorer.celo.org/alfajores";
            readonly apiUrl: "https://explorer.celo.org/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 14569001;
        };
    };
    id: 44787;
    name: "Alfajores";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CELO";
        readonly symbol: "A-CELO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://alfajores-forno.celo-testnet.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.CeloBlockOverrides & {
                transactions: `0x${string}`[] | chains.CeloRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.CeloTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
                randomness: {
                    committed: `0x${string}`;
                    revealed: `0x${string}`;
                };
            } & {
                nonce: never;
                difficulty: never;
                gasLimit: never;
                mixHash: never;
                uncles: never;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee: `0x${string}` | null;
                gatewayFeeRecipient: `0x${string}` | null;
                type: "0x7c";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type: "0x7b";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "cip42";
                feeCurrency: `0x${string}` | null;
                gatewayFee: bigint | null;
                gatewayFeeRecipient: `0x${string}` | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "cip64";
                feeCurrency: `0x${string}` | null;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            };
            type: "transaction";
        };
        readonly transactionRequest: {
            exclude: [] | undefined;
            format: (args: ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas: bigint;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "eip4844" | undefined;
            } & {
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: bigint | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
                type?: "cip42" | undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "cip42" | "cip64" | undefined;
            } & viem.TransactionRequestBase<bigint, number> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                accessList?: viem.AccessList | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
                type?: "cip64" | undefined;
            })) => {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: `0x${string}`;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x3" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x7c" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: `0x${string}` | undefined;
                gatewayFeeRecipient?: `0x${string}` | undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x7b" | undefined;
                feeCurrency?: `0x${string}` | undefined;
                gatewayFee?: undefined;
                gatewayFeeRecipient?: undefined;
            };
            type: "transactionRequest";
        };
    };
    serializers: {
        readonly transaction: typeof viem__types_chains_celo_serializers.serializeTransaction;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Chiliz Explorer";
            readonly url: "https://scan.chiliz.com";
            readonly apiUrl: "https://scan.chiliz.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 88888;
    name: "Chiliz Chain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CHZ";
        readonly symbol: "CHZ";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ankr.com/chiliz", "https://chiliz.publicnode.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "chiliz-chain";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://blockscout.com/etc/mainnet";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 61;
    name: "Ethereum Classic";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "ETC";
        readonly symbol: "ETC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://etc.rivet.link"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "ConfluxScan";
            readonly url: "https://evm.confluxscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xEFf0078910f638cd81996cc117bccD3eDf2B072F";
            readonly blockCreated: 68602935;
        };
    };
    id: 1030;
    name: "Conflux eSpace";
    nativeCurrency: {
        readonly name: "Conflux";
        readonly symbol: "CFX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm.confluxrpc.org"];
            readonly webSocket: readonly ["wss://evm.confluxrpc.org/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "ConfluxScan";
            readonly url: "https://evmtestnet.confluxscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xEFf0078910f638cd81996cc117bccD3eDf2B072F";
            readonly blockCreated: 117499050;
        };
    };
    id: 71;
    name: "Conflux eSpace Testnet";
    nativeCurrency: {
        readonly name: "Conflux";
        readonly symbol: "CFX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evmtestnet.confluxrpc.org"];
            readonly webSocket: readonly ["wss://evmtestnet.confluxrpc.org/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "cfx-espace-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "CoreDao";
            readonly url: "https://scan.coredao.org";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 11907934;
        };
    };
    id: 1116;
    name: "Core Dao";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Core";
        readonly symbol: "CORE";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.coredao.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Cronoscan";
            readonly url: "https://cronoscan.com";
            readonly apiUrl: "https://api.cronoscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 1963112;
        };
    };
    id: 25;
    name: "Cronos Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Cronos";
        readonly symbol: "CRO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm.cronos.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Cronos Explorer";
            readonly url: "https://cronos.org/explorer/testnet3";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 10191251;
        };
    };
    id: 338;
    name: "Cronos Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CRO";
        readonly symbol: "tCRO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm-t3.cronos.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "CrossScan";
            readonly url: "https://scan.crossbell.io";
            readonly apiUrl: "https://scan.crossbell.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 38246031;
        };
    };
    id: 3737;
    name: "Crossbell";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CSB";
        readonly symbol: "CSB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.crossbell.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "DeFiScan";
            readonly url: "https://meta.defiscan.live";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 137852;
        };
    };
    id: 1130;
    name: "DeFiChain EVM Mainnet";
    nativeCurrency: {
        readonly name: "DeFiChain";
        readonly symbol: "DFI";
        readonly decimals: 8;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://eth.mainnet.ocean.jellyfishsdk.com"];
        };
        readonly public: {
            readonly http: readonly ["https://eth.mainnet.ocean.jellyfishsdk.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "defichain-evm";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "DeFiScan";
            readonly url: "https://meta.defiscan.live/?network=TestNet";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 156462;
        };
    };
    id: 1131;
    name: "DeFiChain EVM Testnet";
    nativeCurrency: {
        readonly name: "DeFiChain";
        readonly symbol: "DFI";
        readonly decimals: 8;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://eth.testnet.ocean.jellyfishsdk.com"];
        };
        readonly public: {
            readonly http: readonly ["https://eth.testnet.ocean.jellyfishsdk.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "defichain-evm-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "DFKSubnetScan";
            readonly url: "https://subnets.avax.network/defi-kingdoms";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 53935;
    name: "DFK Chain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Jewel";
        readonly symbol: "JEWEL";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "DogeChainExplorer";
            readonly url: "https://explorer.dogechain.dog";
            readonly apiUrl: "https://explorer.dogechain.dog/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 2000;
    name: "Dogechain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Dogechain";
        readonly symbol: "DC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.dogechain.dog"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Edgscan by Bharathcoorg";
            readonly url: "https://edgscan.live";
            readonly apiUrl: "https://edgscan.live/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 18117872;
        };
    };
    id: 2021;
    name: "Edgeware EdgeEVM Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Edgeware";
        readonly symbol: "EDG";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://edgeware-evm.jelliedowl.net"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Edgscan by Bharathcoorg";
            readonly url: "https://testnet.edgscan.live";
            readonly apiUrl: "https://testnet.edgscan.live/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 2022;
    name: "Beresheet BereEVM Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Testnet EDG";
        readonly symbol: "tEDG";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://beresheet-evm.jelliedowl.net"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "EOS EVM Explorer";
            readonly url: "https://explorer.evm.eosnetwork.com";
            readonly apiUrl: "https://explorer.evm.eosnetwork.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 7943933;
        };
    };
    id: 17777;
    name: "EOS EVM";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "EOS";
        readonly symbol: "EOS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.evm.eosnetwork.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "EOS EVM Testnet Explorer";
            readonly url: "https://explorer.testnet.evm.eosnetwork.com";
            readonly apiUrl: "https://explorer.testnet.evm.eosnetwork.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 9067940;
        };
    };
    id: 15557;
    name: "EOS EVM Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "EOS";
        readonly symbol: "EOS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.testnet.evm.eosnetwork.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherlink Testnet";
            readonly url: "https://testnet-explorer.etherlink.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 128123;
    name: "Etherlink Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Tez";
        readonly symbol: "XTZ";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://node.ghostnet.etherlink.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Evmos Block Explorer";
            readonly url: "https://escan.live";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 9001;
    name: "Evmos";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Evmos";
        readonly symbol: "EVMOS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://eth.bd.evmos.org:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Evmos Testnet Block Explorer";
            readonly url: "https://evm.evmos.dev/";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 9000;
    name: "Evmos Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Evmos";
        readonly symbol: "EVMOS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://eth.bd.evmos.dev:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ektascan";
            readonly url: "https://ektascan.io";
            readonly apiUrl: "https://ektascan.io/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1994;
    name: "Ekta";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "EKTA";
        readonly symbol: "EKTA";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://main.ekta.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Test Ektascan";
            readonly url: "https://test.ektascan.io";
            readonly apiUrl: "https://test.ektascan.io/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1004;
    name: "Ekta Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "EKTA";
        readonly symbol: "EKTA";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://test.ekta.io:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "FTMScan";
            readonly url: "https://ftmscan.com";
            readonly apiUrl: "https://api.ftmscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 33001987;
        };
    };
    id: 250;
    name: "Fantom";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Fantom";
        readonly symbol: "FTM";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ankr.com/fantom"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Fantom Sonic Open Testnet Explorer";
            readonly url: "https://public-sonic.fantom.network";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 64240;
    name: "Fantom Sonic Open Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Fantom";
        readonly symbol: "FTM";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpcapi.sonic.fantom.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "fantom-sonic-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "FTMScan";
            readonly url: "https://testnet.ftmscan.com";
            readonly apiUrl: "https://testnet.ftmscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 8328688;
        };
    };
    id: 4002;
    name: "Fantom Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Fantom";
        readonly symbol: "FTM";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.testnet.fantom.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "FiboScan";
            readonly url: "https://scan.fibochain.org";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 12306;
    name: "Fibo Chain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "fibo";
        readonly symbol: "FIBO";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://network.hzroc.art"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Filfox";
            readonly url: "https://filfox.info/en";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3328594;
        };
    };
    id: 314;
    name: "Filecoin Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "filecoin";
        readonly symbol: "FIL";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.node.glif.io/rpc/v1"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Filscan";
            readonly url: "https://calibration.filscan.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 314159;
    name: "Filecoin Calibration";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "testnet filecoin";
        readonly symbol: "tFIL";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.calibration.node.glif.io/rpc/v1"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Filfox";
            readonly url: "https://hyperspace.filfox.info/en";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 3141;
    name: "Filecoin Hyperspace";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "testnet filecoin";
        readonly symbol: "tFIL";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.hyperspace.node.glif.io/rpc/v1"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Flare Explorer";
            readonly url: "https://flare-explorer.flare.network";
            readonly apiUrl: "https://flare-explorer.flare.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 14;
    name: "Flare Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "flare";
        readonly symbol: "FLR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://flare-api.flare.network/ext/C/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Coston2 Explorer";
            readonly url: "https://coston2-explorer.flare.network";
            readonly apiUrl: "https://coston2-explorer.flare.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 114;
    name: "Coston2";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "coston2flare";
        readonly symbol: "C2FLR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://coston2-api.flare.network/ext/C/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers?: {
        [key: string]: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
        default: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
    } | undefined;
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 31337;
    name: "Foundry";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
            readonly webSocket: readonly ["ws://127.0.0.1:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "fraxscan";
            readonly url: "https://fraxscan.com";
            readonly apiUrl: "https://api.fraxscan.com/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0x66CC916Ed5C6C2FA97014f7D1cD141528Ae171e4";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0x36cb65c1967A0Fb0EEE11569C51C2f2aA1Ca6f6D";
                readonly blockCreated: 19135323;
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0x34C0bD5877A5Ee7099D0f5688D65F4bB9158BDE2";
                readonly blockCreated: 19135323;
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 252;
    name: "Fraxtal";
    nativeCurrency: {
        readonly name: "Frax Ether";
        readonly symbol: "frxETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.frax.com"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "fraxscan testnet";
            readonly url: "https://holesky.fraxscan.com";
            readonly apiUrl: "https://api-holesky.fraxscan.com/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 17000: {
                readonly address: "0x715EA64DA13F4d0831ece4Ad3E8c1aa013167F32";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
        };
        readonly portal: {
            readonly 17000: {
                readonly address: "0xB9c64BfA498d5b9a8398Ed6f46eb76d90dE5505d";
                readonly blockCreated: 318416;
            };
        };
        readonly l1StandardBridge: {
            readonly 17000: {
                readonly address: "0x0BaafC217162f64930909aD9f2B27125121d6332";
                readonly blockCreated: 318416;
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 2522;
    name: "Fraxtal Testnet";
    nativeCurrency: {
        readonly name: "Frax Ether";
        readonly symbol: "frxETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.testnet.frax.com"];
        };
    };
    sourceId: 17000;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Fuse Explorer";
            readonly url: "https://explorer.fuse.io";
            readonly apiUrl: "https://explorer.fuse.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 16146628;
        };
    };
    id: 122;
    name: "Fuse";
    nativeCurrency: {
        readonly name: "Fuse";
        readonly symbol: "FUSE";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.fuse.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Sparkent Explorer";
            readonly url: "https://explorer.fusespark.io";
            readonly apiUrl: "https://explorer.fusespark.io/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 123;
    name: "Fuse Sparknet";
    nativeCurrency: {
        readonly name: "Spark";
        readonly symbol: "SPARK";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.fusespark.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "IoTeXScan";
            readonly url: "https://iotexscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 22163670;
        };
    };
    id: 4689;
    name: "IoTeX";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "IoTeX";
        readonly symbol: "IOTX";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://babel-api.mainnet.iotex.io"];
            readonly webSocket: readonly ["wss://babel-api.mainnet.iotex.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "IoTeXScan";
            readonly url: "https://testnet.iotexscan.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 4690;
    name: "IoTeX Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "IoTeX";
        readonly symbol: "IOTX";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://babel-api.testnet.iotex.io"];
            readonly webSocket: readonly ["wss://babel-api.testnet.iotex.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://exp-l1.jibchain.net";
            readonly apiUrl: "https://exp-l1.jibchain.net/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xc0C8C486D1466C57Efe13C2bf000d4c56F47CBdC";
            readonly blockCreated: 2299048;
        };
    };
    id: 8899;
    name: "JIBCHAIN L1";
    nativeCurrency: {
        readonly name: "JBC";
        readonly symbol: "JBC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc-l1.jibchain.net"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc-l1.jibchain.net"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "jbc";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Karura Blockscout";
            readonly url: "https://blockscout.karura.network";
            readonly apiUrl: "https://blockscout.karura.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 686;
    name: "Karura";
    nativeCurrency: {
        readonly name: "Karura";
        readonly symbol: "KAR";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly public: {
            readonly http: readonly ["https://eth-rpc-karura.aca-api.network"];
            readonly webSocket: readonly ["wss://eth-rpc-karura.aca-api.network"];
        };
        readonly default: {
            readonly http: readonly ["https://eth-rpc-karura.aca-api.network"];
            readonly webSocket: readonly ["wss://eth-rpc-karura.aca-api.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "karura";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Gobi Explorer";
            readonly url: "https://gobi-explorer.horizen.io";
        };
    };
    contracts: {};
    id: 1663;
    name: "Horizen Gobi Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Test ZEN";
        readonly symbol: "tZEN";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://gobi-testnet.horizenlabs.io/ethv1"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://goerli.etherscan.io";
            readonly apiUrl: "https://api-goerli.etherscan.io/api";
        };
    };
    contracts: {
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
        };
        readonly ensUniversalResolver: {
            readonly address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1";
            readonly blockCreated: 10339206;
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 6507670;
        };
    };
    id: 5;
    name: "Goerli";
    nativeCurrency: {
        readonly name: "Goerli Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ankr.com/eth_goerli"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Gnosisscan";
            readonly url: "https://gnosisscan.io";
            readonly apiUrl: "https://api.gnosisscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 21022491;
        };
    };
    id: 100;
    name: "Gnosis";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Gnosis";
        readonly symbol: "xDAI";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.gnosischain.com"];
            readonly webSocket: readonly ["wss://rpc.gnosischain.com/wss"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://blockscout.chiadochain.net";
            readonly apiUrl: "https://blockscout.chiadochain.net/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 4967313;
        };
    };
    id: 10200;
    name: "Gnosis Chiado";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Gnosis";
        readonly symbol: "xDAI";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.chiadochain.net"];
            readonly webSocket: readonly ["wss://rpc.chiadochain.net/wss"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers?: {
        [key: string]: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
        default: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
    } | undefined;
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 31337;
    name: "Hardhat";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Harmony Explorer";
            readonly url: "https://explorer.harmony.one";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 24185753;
        };
    };
    id: 1666600000;
    name: "Harmony One";
    nativeCurrency: {
        readonly name: "Harmony";
        readonly symbol: "ONE";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ankr.com/harmony"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "HAQQ Explorer";
            readonly url: "https://explorer.haqq.network";
            readonly apiUrl: "https://explorer.haqq.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 11235;
    name: "HAQQ Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Islamic Coin";
        readonly symbol: "ISLM";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.eth.haqq.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "HAQQ Explorer";
            readonly url: "https://explorer.testedge2.haqq.network";
            readonly apiUrl: "https://explorer.testedge2.haqq.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 54211;
    name: "HAQQ Testedge 2";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Islamic Coin";
        readonly symbol: "ISLMT";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.eth.testedge2.haqq.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Hashscan";
            readonly url: "https://hashscan.io/mainnet";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 295;
    name: "Hedera Mainnet";
    nativeCurrency: {
        readonly symbol: "HBAR";
        readonly name: "HBAR";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.hashio.io/api"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "hedera-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Hashscan";
            readonly url: "https://hashscan.io/testnet";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 296;
    name: "Hedera Testnet";
    nativeCurrency: {
        readonly symbol: "HBAR";
        readonly name: "HBAR";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.hashio.io/api"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "hedera-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Hashscan";
            readonly url: "https://hashscan.io/previewnet";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 297;
    name: "Hedera Previewnet";
    nativeCurrency: {
        readonly symbol: "HBAR";
        readonly name: "HBAR";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://previewnet.hashio.io/api"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "hedera-previewnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://holesky.etherscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 77;
        };
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            readonly blockCreated: 801613;
        };
        readonly ensUniversalResolver: {
            readonly address: "0xa6AC935D4971E3CD133b950aE053bECD16fE7f3b";
            readonly blockCreated: 973484;
        };
    };
    id: 17000;
    name: "Holesky";
    nativeCurrency: {
        readonly name: "Holesky Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://ethereum-holesky.publicnode.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Kakarot Scan";
            readonly url: "https://sepolia.kakarotscan.org";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 107107114116;
    name: "Kakarot Sepolia";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia-rpc.kakarot.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Kava EVM Explorer";
            readonly url: "https://kavascan.com";
            readonly apiUrl: "https://kavascan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 3661165;
        };
    };
    id: 2222;
    name: "Kava EVM";
    nativeCurrency: {
        readonly name: "Kava";
        readonly symbol: "KAVA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm.kava.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "kava-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Kava EVM Testnet Explorer";
            readonly url: "https://testnet.kavascan.com/";
            readonly apiUrl: "https://testnet.kavascan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xDf1D724A7166261eEB015418fe8c7679BBEa7fd6";
            readonly blockCreated: 7242179;
        };
    };
    id: 2221;
    name: "Kava EVM Testnet";
    nativeCurrency: {
        readonly name: "Kava";
        readonly symbol: "KAVA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://evm.testnet.kava.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "kava-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "KCC Explorer";
            readonly url: "https://explorer.kcc.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 11760430;
        };
    };
    id: 321;
    name: "KCC Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "KCS";
        readonly symbol: "KCS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://kcc-rpc.com"];
        };
        readonly public: {
            readonly http: readonly ["https://kcc-rpc.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "KCC Mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "KlaytnScope";
            readonly url: "https://scope.klaytn.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 96002415;
        };
    };
    id: 8217;
    name: "Klaytn";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Klaytn";
        readonly symbol: "KLAY";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://public-en-cypress.klaytn.net"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "KlaytnScope";
            readonly url: "https://baobab.klaytnscope.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 123390593;
        };
    };
    id: 1001;
    name: "Klaytn Baobab Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Baobab Klaytn";
        readonly symbol: "KLAY";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://public-en-baobab.klaytn.net"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "klaytn-baobab";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Kroma Explorer";
            readonly url: "https://blockscout.kroma.network";
            readonly apiUrl: "https://blockscout.kroma.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 255;
    name: "Kroma";
    nativeCurrency: {
        readonly name: "ETH";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.kroma.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Kroma Sepolia Explorer";
            readonly url: "https://blockscout.sepolia.kroma.network";
            readonly apiUrl: "https://blockscout.sepolia.kroma.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 2358;
    name: "Kroma Sepolia";
    nativeCurrency: {
        readonly name: "Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.sepolia.kroma.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "LightLink Pegasus Explorer";
            readonly url: "https://pegasus.lightlink.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1891;
    name: "LightLink Pegasus Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://replicator.pegasus.lightlink.io/rpc/v1"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "lightlink-pegasus";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "LightLink Phoenix Explorer";
            readonly url: "https://phoenix.lightlink.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1890;
    name: "LightLink Phoenix Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://replicator.phoenix.lightlink.io/rpc/v1"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "lightlink-phoenix";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://lineascan.build";
            readonly apiUrl: "https://api.lineascan.build/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 42;
        };
    };
    id: 59144;
    name: "Linea Mainnet";
    nativeCurrency: {
        readonly name: "Linea Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.linea.build"];
            readonly webSocket: readonly ["wss://rpc.linea.build"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://goerli.lineascan.build";
            readonly apiUrl: "https://goerli.lineascan.build/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 498623;
        };
    };
    id: 59140;
    name: "Linea Goerli Testnet";
    nativeCurrency: {
        readonly name: "Linea Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.goerli.linea.build"];
            readonly webSocket: readonly ["wss://rpc.goerli.linea.build"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://sepolia-blockscout.lisk.com";
            readonly apiUrl: "https://sepolia-blockscout.lisk.com/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0xA0E35F56C318DE1bD5D9ca6A94Fe7e37C5663348";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0xe3d90F21490686Ec7eF37BE788E02dfC12787264";
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0x1Fb30e446eA791cd1f011675E5F3f5311b70faF5";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 4202;
    name: "Lisk Sepolia";
    nativeCurrency: {
        readonly name: "Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.sepolia-api.lisk.com"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "lisk-sepolia";
} | {
    blockExplorers?: {
        [key: string]: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
        default: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
    } | undefined;
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1337;
    name: "Localhost";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:8545"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "LUKSO Mainnet Explorer";
            readonly url: "https://explorer.execution.mainnet.lukso.network";
            readonly apiUrl: "https://api.explorer.execution.mainnet.lukso.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 42;
    name: "LUKSO";
    nativeCurrency: {
        readonly name: "LUKSO";
        readonly symbol: "LYX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.mainnet.lukso.network"];
            readonly webSocket: readonly ["wss://ws-rpc.mainnet.lukso.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "lukso";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Mandala Blockscout";
            readonly url: "https://blockscout.mandala.aca-staging.network";
            readonly apiUrl: "https://blockscout.mandala.aca-staging.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 595;
    name: "Mandala TC9";
    nativeCurrency: {
        readonly name: "Mandala";
        readonly symbol: "mACA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly public: {
            readonly http: readonly ["https://eth-rpc-tc9.aca-staging.network"];
            readonly webSocket: readonly ["wss://eth-rpc-tc9.aca-staging.network"];
        };
        readonly default: {
            readonly http: readonly ["https://eth-rpc-tc9.aca-staging.network"];
            readonly webSocket: readonly ["wss://eth-rpc-tc9.aca-staging.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "mandala";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Manta Explorer";
            readonly url: "https://pacific-explorer.manta.network";
            readonly apiUrl: "https://pacific-explorer.manta.network/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 332890;
        };
    };
    id: 169;
    name: "Manta Pacific Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "ETH";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://pacific-rpc.manta.network/http"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "manta";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Manta Testnet Explorer";
            readonly url: "https://pacific-explorer.testnet.manta.network";
            readonly apiUrl: "https://pacific-explorer.testnet.manta.network/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x211B1643b95Fe76f11eD8880EE810ABD9A4cf56C";
            readonly blockCreated: 419915;
        };
    };
    id: 3441005;
    name: "Manta Pacific Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "ETH";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://manta-testnet.calderachain.xyz/http"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "manta-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Mantle Explorer";
            readonly url: "https://explorer.mantle.xyz";
            readonly apiUrl: "https://explorer.mantle.xyz/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 304717;
        };
    };
    id: 5000;
    name: "Mantle";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MNT";
        readonly symbol: "MNT";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.mantle.xyz"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Mantle Testnet Explorer";
            readonly url: "https://explorer.testnet.mantle.xyz";
            readonly apiUrl: "https://explorer.testnet.mantle.xyz/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 561333;
        };
    };
    id: 5001;
    name: "Mantle Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MNT";
        readonly symbol: "MNT";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.testnet.mantle.xyz"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "blockscout";
            readonly url: "https://scan.merlinchain.io";
            readonly apiUrl: "https://scan.merlinchain.io/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 4200;
    name: "Merlin";
    nativeCurrency: {
        readonly name: "BTC";
        readonly symbol: "BTC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.merlinchain.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "MetaExplorer";
            readonly url: "https://explorer.metatime.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x0000000000000000000000000000000000003001";
            readonly blockCreated: 0;
        };
    };
    id: 571;
    name: "MetaChain Mainnet";
    nativeCurrency: {
        readonly name: "Metatime Coin";
        readonly symbol: "MTC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.metatime.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "MetaExplorer";
            readonly url: "https://istanbul-explorer.metachain.dev";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x0000000000000000000000000000000000003001";
            readonly blockCreated: 0;
        };
    };
    id: 1453;
    name: "MetaChain Istanbul";
    nativeCurrency: {
        readonly name: "Metatime Coin";
        readonly symbol: "MTC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://istanbul-rpc.metachain.dev"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "MeterScan";
            readonly url: "https://scan.meter.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 82;
    name: "Meter";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MTR";
        readonly symbol: "MTR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.meter.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "MeterTestnetScan";
            readonly url: "https://scan-warringstakes.meter.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 83;
    name: "Meter Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MTR";
        readonly symbol: "MTR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpctest.meter.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Andromeda Explorer";
            readonly url: "https://andromeda-explorer.metis.io";
            readonly apiUrl: "https://andromeda-explorer.metis.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 2338552;
        };
    };
    id: 1088;
    name: "Metis";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Metis";
        readonly symbol: "METIS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://andromeda.metis.io/?owner=1088"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Metis Goerli Explorer";
            readonly url: "https://goerli.explorer.metisdevops.link";
            readonly apiUrl: "https://goerli.explorer.metisdevops.link/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 1006207;
        };
    };
    id: 599;
    name: "Metis Goerli";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Metis Goerli";
        readonly symbol: "METIS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://goerli.gateway.metisdevops.link"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Explorer";
            readonly url: "https://www.meversescan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 86881340;
        };
    };
    id: 7518;
    name: "MEVerse Chain Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MEVerse";
        readonly symbol: "MEV";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.meversemainnet.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Explorer";
            readonly url: "https://testnet.meversescan.io/";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 64371115;
        };
    };
    id: 4759;
    name: "MEVerse Chain Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MEVerse";
        readonly symbol: "MEV";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.meversetestnet.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Mintchain Testnet explorer";
            readonly url: "https://testnet-explorer.mintchain.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1686;
    name: "Mint Sepolia Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet-rpc.mintchain.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Mode Explorer";
            readonly url: "https://explorer.mode.network";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 2465882;
        };
    };
    id: 34443;
    name: "Mode Mainnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.mode.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://sepolia.explorer.mode.network";
            readonly apiUrl: "https://sepolia.explorer.mode.network/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xBAba8373113Fb7a68f195deF18732e01aF8eDfCF";
            readonly blockCreated: 3019007;
        };
    };
    id: 919;
    name: "Mode Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.mode.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Moonscan";
            readonly url: "https://moonbase.moonscan.io";
            readonly apiUrl: "https://moonbase.moonscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 1850686;
        };
    };
    id: 1287;
    name: "Moonbase Alpha";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "DEV";
        readonly symbol: "DEV";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.api.moonbase.moonbeam.network"];
            readonly webSocket: readonly ["wss://wss.api.moonbase.moonbeam.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Moonscan";
            readonly url: "https://moonscan.io";
            readonly apiUrl: "https://api-moonbeam.moonscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 609002;
        };
    };
    id: 1284;
    name: "Moonbeam";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "GLMR";
        readonly symbol: "GLMR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://moonbeam.public.blastapi.io"];
            readonly webSocket: readonly ["wss://moonbeam.public.blastapi.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers?: {
        [key: string]: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
        default: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
    } | undefined;
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1281;
    name: "Moonbeam Development Node";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "DEV";
        readonly symbol: "DEV";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["http://127.0.0.1:9944"];
            readonly webSocket: readonly ["wss://127.0.0.1:9944"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Moonscan";
            readonly url: "https://moonriver.moonscan.io";
            readonly apiUrl: "https://api-moonriver.moonscan.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 1597904;
        };
    };
    id: 1285;
    name: "Moonriver";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "MOVR";
        readonly symbol: "MOVR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://moonriver.public.blastapi.io"];
            readonly webSocket: readonly ["wss://moonriver.public.blastapi.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Neonscan";
            readonly url: "https://devnet.neonscan.org";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 205206112;
        };
    };
    id: 245022926;
    name: "Neon EVM DevNet";
    nativeCurrency: {
        readonly name: "NEON";
        readonly symbol: "NEON";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://devnet.neonevm.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Neonscan";
            readonly url: "https://neonscan.org";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 206545524;
        };
    };
    id: 245022934;
    name: "Neon EVM MainNet";
    nativeCurrency: {
        readonly name: "NEON";
        readonly symbol: "NEON";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://neon-proxy-mainnet.solana.p2p.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "neonMainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "NexiScan";
            readonly url: "https://www.nexiscan.com";
            readonly apiUrl: "https://www.nexiscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x0277A46Cc69A57eE3A6C8c158bA874832F718B8E";
            readonly blockCreated: 25770160;
        };
    };
    id: 4242;
    name: "Nexi";
    nativeCurrency: {
        readonly name: "Nexi";
        readonly symbol: "NEXI";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.chain.nexi.technology"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "NexilixScan";
            readonly url: "https://scan.nexilix.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x58381c8e2BF9d0C2C4259cA14BdA9Afe02831244";
            readonly blockCreated: 74448;
        };
    };
    id: 240;
    name: "Nexilix Smart Chain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Nexilix";
        readonly symbol: "NEXILIX";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpcurl.pos.nexilix.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "OasysScan";
            readonly url: "https://scan.oasys.games";
            readonly apiUrl: "https://scan.oasys.games/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 248;
    name: "Oasys";
    nativeCurrency: {
        readonly name: "Oasys";
        readonly symbol: "OAS";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.mainnet.oasys.games"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ftnscan";
            readonly url: "https://oasis.ftnscan.com";
            readonly apiUrl: "https://oasis.ftnscan.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 4090;
    name: "Oasis Testnet";
    nativeCurrency: {
        readonly name: "Fasttoken";
        readonly symbol: "FTN";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc1.oasis.bahamutchain.com"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc1.oasis.bahamutchain.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "oasis-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "oklink";
            readonly url: "https://www.oklink.com/okc";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 10364792;
        };
    };
    id: 66;
    name: "OKC";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "OKT";
        readonly symbol: "OKT";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://exchainrpc.okex.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://goerli-optimism.etherscan.io";
            readonly apiUrl: "https://goerli-optimism.etherscan.io/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 5: {
                readonly address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 49461;
        };
        readonly portal: {
            readonly 5: {
                readonly address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383";
            };
        };
        readonly l1StandardBridge: {
            readonly 5: {
                readonly address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 420;
    name: "Optimism Goerli";
    nativeCurrency: {
        readonly name: "Goerli Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://goerli.optimism.io"];
        };
    };
    sourceId: 5;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://optimism-sepolia.blockscout.com";
            readonly apiUrl: "https://optimism-sepolia.blockscout.com/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 1620204;
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC";
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 11155420;
    name: "OP Sepolia";
    nativeCurrency: {
        readonly name: "Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.optimism.io"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "opbnbscan";
            readonly url: "https://mainnet.opbnbscan.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 512881;
        };
    };
    id: 204;
    name: "opBNB";
    nativeCurrency: {
        readonly name: "BNB";
        readonly symbol: "BNB";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://opbnb-mainnet-rpc.bnbchain.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "opbnbscan";
            readonly url: "https://testnet.opbnbscan.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3705108;
        };
    };
    id: 5611;
    name: "opBNB Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "tBNB";
        readonly symbol: "tBNB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://opbnb-testnet-rpc.bnbchain.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly oort: {
            readonly name: "OORT MainnetDev Explorer";
            readonly url: "https://dev-scan.oortech.com";
        };
        readonly default: {
            readonly name: "OORT MainnetDev Explorer";
            readonly url: "https://dev-scan.oortech.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 9700;
    name: "OORT MainnetDev";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "OORT";
        readonly symbol: "OORT";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://dev-rpc.oortech.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Chainlens";
            readonly url: "https://palm.chainlens.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 15429248;
        };
    };
    id: 11297108109;
    name: "Palm";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "PALM";
        readonly symbol: "PALM";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://palm-mainnet.public.blastapi.io"];
            readonly webSocket: readonly ["wss://palm-mainnet.public.blastapi.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Chainlens";
            readonly url: "https://palm.chainlens.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 15429248;
        };
    };
    id: 11297108099;
    name: "Palm Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "PALM";
        readonly symbol: "PALM";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://palm-mainnet.public.blastapi.io"];
            readonly webSocket: readonly ["wss://palm-mainnet.public.blastapi.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PGN Explorer";
            readonly url: "https://explorer.publicgoods.network";
            readonly apiUrl: "https://explorer.publicgoods.network/api";
        };
        readonly blocksout: {
            readonly name: "PGN Explorer";
            readonly url: "https://explorer.publicgoods.network";
            readonly apiUrl: "https://explorer.publicgoods.network/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0x9E6204F750cD866b299594e2aC9eA824E2e5f95c";
            };
        };
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3380209;
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0xb26Fd985c5959bBB382BAFdD0b879E149e48116c";
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0xD0204B9527C1bA7bD765Fa5CCD9355d38338272b";
            };
        };
    };
    id: 424;
    name: "PGN";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.publicgoods.network"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "pgn";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PGN Testnet Explorer";
            readonly url: "https://explorer.sepolia.publicgoods.network";
            readonly apiUrl: "https://explorer.sepolia.publicgoods.network/api";
        };
        readonly blocksout: {
            readonly name: "PGN Testnet Explorer";
            readonly url: "https://explorer.sepolia.publicgoods.network";
            readonly apiUrl: "https://explorer.sepolia.publicgoods.network/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0xD5bAc3152ffC25318F848B3DD5dA6C85171BaEEe";
            };
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0xF04BdD5353Bb0EFF6CA60CfcC78594278eBfE179";
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0xFaE6abCAF30D23e233AC7faF747F2fC3a5a6Bfa3";
            };
        };
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3754925;
        };
    };
    id: 58008;
    name: "PGN ";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.publicgoods.network"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "pgn-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Phoenixplorer";
            readonly url: "https://phoenixplorer.com";
            readonly apiUrl: "https://phoenixplorer.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x498cF757a575cFF2c2Ed9f532f56Efa797f86442";
            readonly blockCreated: 5620192;
        };
    };
    id: 13381;
    name: "Phoenix Blockchain";
    nativeCurrency: {
        readonly name: "Phoenix";
        readonly symbol: "PHX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.phoenixplorer.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Plgscan";
            readonly url: "https://www.plgscan.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x0989576160f2e7092908BB9479631b901060b6e4";
            readonly blockCreated: 204489;
        };
    };
    id: 242;
    name: "Plinga";
    nativeCurrency: {
        readonly name: "Plinga";
        readonly symbol: "PLINGA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpcurl.mainnet.plgchain.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://plume-testnet.explorer.caldera.xyz";
            readonly apiUrl: "https://plume-testnet.explorer.caldera.xyz/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 161221135;
    name: "Plume Testnet";
    nativeCurrency: {
        readonly name: "Plume Sepolia Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://plume-testnet.rpc.caldera.xyz/http"];
            readonly webSocket: readonly ["wss://plume-testnet.rpc.caldera.xyz/ws"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "OK LINK";
            readonly url: "https://www.oklink.com/amoy";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 80002;
    name: "Polygon Amoy";
    nativeCurrency: {
        readonly name: "MATIC";
        readonly symbol: "MATIC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc-amoy.polygon.technology"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PolygonScan";
            readonly url: "https://mumbai.polygonscan.com";
            readonly apiUrl: "https://mumbai.polygonscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 25770160;
        };
    };
    id: 80001;
    name: "Polygon Mumbai";
    nativeCurrency: {
        readonly name: "MATIC";
        readonly symbol: "MATIC";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.ankr.com/polygon_mumbai"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PolygonScan";
            readonly url: "https://testnet-zkevm.polygonscan.com";
            readonly apiUrl: "https://testnet-zkevm.polygonscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 525686;
        };
    };
    id: 1442;
    name: "Polygon zkEVM Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.public.zkevm-test.net"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PolygonScan";
            readonly url: "https://zkevm.polygonscan.com";
            readonly apiUrl: "https://api-zkevm.polygonscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 57746;
        };
    };
    id: 1101;
    name: "Polygon zkEVM";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://zkevm-rpc.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PulseScan";
            readonly url: "https://scan.pulsechain.com";
            readonly apiUrl: "https://api.scan.pulsechain.com/api";
        };
    };
    contracts: {
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 14353601;
        };
    };
    id: 369;
    name: "PulseChain";
    nativeCurrency: {
        readonly name: "Pulse";
        readonly symbol: "PLS";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.pulsechain.com"];
            readonly webSocket: readonly ["wss://ws.pulsechain.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "PulseScan";
            readonly url: "https://scan.v4.testnet.pulsechain.com";
            readonly apiUrl: "https://scan.v4.testnet.pulsechain.com/api";
        };
    };
    contracts: {
        readonly ensRegistry: {
            readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 14353601;
        };
    };
    id: 943;
    name: "PulseChain V4";
    nativeCurrency: {
        readonly name: "V4 Pulse";
        readonly symbol: "v4PLS";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.v4.testnet.pulsechain.com"];
            readonly webSocket: readonly ["wss://ws.v4.testnet.pulsechain.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Q Mainnet Explorer";
            readonly url: "https://explorer.q.org";
            readonly apiUrl: "https://explorer.q.org/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 35441;
    name: "Q Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Q";
        readonly symbol: "Q";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.q.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Q Testnet Explorer";
            readonly url: "https://explorer.qtestnet.org";
            readonly apiUrl: "https://explorer.qtestnet.org/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 35443;
    name: "Q Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Q";
        readonly symbol: "Q";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.qtestnet.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "RolluxExplorer";
            readonly url: "https://explorer.rollux.com";
            readonly apiUrl: "https://explorer.rollux.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 119222;
        };
    };
    id: 570;
    name: "Rollux Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Syscoin";
        readonly symbol: "SYS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.rollux.com"];
            readonly webSocket: readonly ["wss://rpc.rollux.com/wss"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "RolluxTestnetExplorer";
            readonly url: "https://rollux.tanenbaum.io";
            readonly apiUrl: "https://rollux.tanenbaum.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 1813675;
        };
    };
    id: 57000;
    name: "Rollux Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Syscoin";
        readonly symbol: "SYS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc-tanenbaum.rollux.com/"];
            readonly webSocket: readonly ["wss://rpc-tanenbaum.rollux.com/wss"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ronin Explorer";
            readonly url: "https://app.roninchain.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 26023535;
        };
    };
    id: 2020;
    name: "Ronin";
    nativeCurrency: {
        readonly name: "RON";
        readonly symbol: "RON";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.roninchain.com/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "RSK Explorer";
            readonly url: "https://explorer.rsk.co";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 4249540;
        };
    };
    id: 30;
    name: "Rootstock Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Rootstock Bitcoin";
        readonly symbol: "RBTC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://public-node.rsk.co"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "rootstock";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "RSS3 VSL Mainnet Scan";
            readonly url: "https://scan.rss3.io";
            readonly apiUrl: "https://scan.rss3.io/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0xE6f24d2C32B3109B18ed33cF08eFb490b1e09C10";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 14193;
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0x6A12432491bbbE8d3babf75F759766774C778Db4";
                readonly blockCreated: 19387057;
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0x4cbab69108Aa72151EDa5A3c164eA86845f18438";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 12553;
    name: "RSS3 VSL Mainnet";
    nativeCurrency: {
        readonly name: "RSS3";
        readonly symbol: "RSS3";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.rss3.io"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "RSS3 VSL Sepolia Testnet Scan";
            readonly url: "https://scan.testnet.rss3.io";
            readonly apiUrl: "https://scan.testnet.rss3.io/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0xDb5c46C3Eaa6Ed6aE8b2379785DF7dd029C0dC81";
            };
        };
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 55697;
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0xcBD77E8E1E7F06B25baDe67142cdE82652Da7b57";
                readonly blockCreated: 5345035;
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0xdDD29bb63B0839FB1cE0eE439Ff027738595D07B";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 2331;
    name: "RSS3 VSL Sepolia Testnet";
    nativeCurrency: {
        readonly name: "RSS3";
        readonly symbol: "RSS3";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.testnet.rss3.io"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Saigon Explorer";
            readonly url: "https://saigon-app.roninchain.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 18736871;
        };
    };
    id: 2021;
    name: "Saigon Testnet";
    nativeCurrency: {
        readonly name: "RON";
        readonly symbol: "RON";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://saigon-testnet.roninchain.com/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Oasis Sapphire Explorer";
            readonly url: "https://explorer.sapphire.oasis.io";
            readonly apiUrl: "https://explorer.sapphire.oasis.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 734531;
        };
    };
    id: 23294;
    name: "Oasis Sapphire";
    nativeCurrency: {
        readonly name: "Sapphire Rose";
        readonly symbol: "ROSE";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sapphire.oasis.io"];
            readonly webSocket: readonly ["wss://sapphire.oasis.io/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "sapphire";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Oasis Sapphire Testnet Explorer";
            readonly url: "https://testnet.explorer.sapphire.oasis.dev";
            readonly apiUrl: "https://testnet.explorer.sapphire.oasis.dev/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 23295;
    name: "Oasis Sapphire Testnet";
    nativeCurrency: {
        readonly name: "Sapphire Test Rose";
        readonly symbol: "TEST";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.sapphire.oasis.dev"];
            readonly webSocket: readonly ["wss://testnet.sapphire.oasis.dev/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "sapphire-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Scrollscan";
            readonly url: "https://scrollscan.com";
            readonly apiUrl: "https://api.scrollscan.com/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 14;
        };
    };
    id: 534352;
    name: "Scroll";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.scroll.io"];
            readonly webSocket: readonly ["wss://wss-rpc.scroll.io/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://sepolia-blockscout.scroll.io";
            readonly apiUrl: "https://sepolia-blockscout.scroll.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 9473;
        };
    };
    id: 534351;
    name: "Scroll Sepolia";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia-rpc.scroll.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://blockscout.scroll.io";
            readonly apiUrl: "https://blockscout.scroll.io/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 534353;
    name: "Scroll Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://alpha-rpc.scroll.io/l2"];
            readonly webSocket: readonly ["wss://alpha-rpc.scroll.io/l2/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Shimmer Network Explorer";
            readonly url: "https://explorer.evm.shimmer.network";
            readonly apiUrl: "https://explorer.evm.shimmer.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 148;
    name: "Shimmer";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Shimmer";
        readonly symbol: "SMR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://json-rpc.evm.shimmer.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "shimmer";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Shimmer Network Explorer";
            readonly url: "https://explorer.evm.testnet.shimmer.network";
            readonly apiUrl: "https://explorer.evm.testnet.shimmer.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1073;
    name: "Shimmer Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Shimmer";
        readonly symbol: "SMR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://json-rpc.evm.testnet.shimmer.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "shimmer-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://frayed-decent-antares.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {};
    id: 391845894;
    name: "SKALE | Block Brawlers";
    nativeCurrency: {
        readonly name: "BRAWL";
        readonly symbol: "BRAWL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/frayed-decent-antares"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/frayed-decent-antares"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3107626;
        };
    };
    id: 1564830818;
    name: "SKALE | Calypso NFT Hub";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/honorable-steel-rasalhague"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://giant-half-dual-testnet.explorer.testnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 103220;
        };
    };
    id: 974399131;
    name: "SKALE Calypso Testnet";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.skalenodes.com/v1/giant-half-dual-testnet"];
            readonly webSocket: readonly ["wss://testnet.skalenodes.com/v1/ws/giant-half-dual-testnet"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://affectionate-immediate-pollux.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {};
    id: 1026062157;
    name: "SKALE | CryptoBlades";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/affectionate-immediate-pollux"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/affectionate-immediate-pollux"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://haunting-devoted-deneb.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {};
    id: 2046399126;
    name: "SKALE | Crypto Colosseum";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/haunting-devoted-deneb"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/haunting-devoted-deneb"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://elated-tan-skat.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3113495;
        };
    };
    id: 2046399126;
    name: "SKALE | Europa Liquidity Hub";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/elated-tan-skat"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/elated-tan-skat"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://juicy-low-small-testnet.explorer.testnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 110858;
        };
    };
    id: 1444673419;
    name: "SKALE Europa Testnet";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.skalenodes.com/v1/juicy-low-small-testnet"];
            readonly webSocket: readonly ["wss://testnet.skalenodes.com/v1/ws/juicy-low-small-testnet"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://light-vast-diphda.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {};
    id: 2139927552;
    name: "SKALE | Exorde";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/light-vast-diphda"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/light-vast-diphda"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://wan-red-ain.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {};
    id: 1273227453;
    name: "SKALE | Human Protocol";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/wan-red-ain"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/wan-red-ain"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://green-giddy-denebola.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 2372986;
        };
    };
    id: 1482601649;
    name: "SKALE | Nebula Gaming Hub";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/green-giddy-denebola"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/green-giddy-denebola"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://lanky-ill-funny-testnet.explorer.testnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 105141;
        };
    };
    id: 37084624;
    name: "SKALE Nebula Testnet";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.skalenodes.com/v1/lanky-ill-funny-testnet"];
            readonly webSocket: readonly ["wss://testnet.skalenodes.com/v1/ws/lanky-ill-funny-testnet"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {};
    id: 278611351;
    name: "SKALE | Razor Network";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/turbulent-unique-scheat"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/turbulent-unique-scheat"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://parallel-stormy-spica.explorer.mainnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 2076458;
        };
    };
    id: 1350216234;
    name: "SKALE | Titan Community Hub";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.skalenodes.com/v1/parallel-stormy-spica"];
            readonly webSocket: readonly ["wss://mainnet.skalenodes.com/v1/ws/parallel-stormy-spica"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SKALE Explorer";
            readonly url: "https://aware-fake-trim-testnet.explorer.testnet.skalenodes.com";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 104072;
        };
    };
    id: 1020352220;
    name: "SKALE Titan Hub";
    nativeCurrency: {
        readonly name: "sFUEL";
        readonly symbol: "sFUEL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.skalenodes.com/v1/aware-fake-trim-testnet"];
            readonly webSocket: readonly ["wss://testnet.skalenodes.com/v1/ws/aware-fake-trim-testnet"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Songbird Explorer";
            readonly url: "https://songbird-explorer.flare.network";
            readonly apiUrl: "https://songbird-explorer.flare.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 19;
    name: "Songbird Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "songbird";
        readonly symbol: "SGB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://songbird-api.flare.network/ext/C/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Coston Explorer";
            readonly url: "https://coston-explorer.flare.network";
            readonly apiUrl: "https://coston-explorer.flare.network/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 16;
    name: "Coston";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "costonflare";
        readonly symbol: "CFLR";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://coston-api.flare.network/ext/C/rpc"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Chiliz Explorer";
            readonly url: "http://spicy-explorer.chiliz.com";
            readonly apiUrl: "http://spicy-explorer.chiliz.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 88882;
    name: "Chiliz Spicy Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CHZ";
        readonly symbol: "CHZ";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://spicy-rpc.chiliz.com", "https://chiliz-spicy.publicnode.com"];
            readonly webSocket: readonly ["wss://spicy-rpc-ws.chiliz.com", "wss://chiliz-spicy.publicnode.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "chiliz-spicy-Testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Shardeum Explorer";
            readonly url: "https://explorer-sphinx.shardeum.org";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 8082;
    name: "Shardeum Sphinx";
    nativeCurrency: {
        readonly name: "SHARDEUM";
        readonly symbol: "SHM";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sphinx.shardeum.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blockscout";
            readonly url: "https://shibariumscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x864Bf681ADD6052395188A89101A1B37d3B4C961";
            readonly blockCreated: 265900;
        };
    };
    id: 109;
    name: "Shibarium";
    nativeCurrency: {
        readonly name: "Bone";
        readonly symbol: "BONE";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.shibrpc.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "shibarium";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SyscoinExplorer";
            readonly url: "https://explorer.syscoin.org";
            readonly apiUrl: "https://explorer.syscoin.org/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 287139;
        };
    };
    id: 57;
    name: "Syscoin Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Syscoin";
        readonly symbol: "SYS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.syscoin.org"];
            readonly webSocket: readonly ["wss://rpc.syscoin.org/wss"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "SyscoinTestnetExplorer";
            readonly url: "https://tanenbaum.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 271288;
        };
    };
    id: 5700;
    name: "Syscoin Tanenbaum Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Syscoin";
        readonly symbol: "SYS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.tanenbaum.io"];
            readonly webSocket: readonly ["wss://rpc.tanenbaum.io/wss"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Taraxa Explorer";
            readonly url: "https://explorer.mainnet.taraxa.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 841;
    name: "Taraxa Mainnet";
    nativeCurrency: {
        readonly name: "Tara";
        readonly symbol: "TARA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.mainnet.taraxa.io"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "blockscout";
            readonly url: "https://explorer.jolnir.taiko.xyz";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 732706;
        };
    };
    id: 167007;
    name: "Taiko Jolnir (Alpha-5 Testnet)";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.jolnir.taiko.xyz"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "blockscout";
            readonly url: "https://explorer.katla.taiko.xyz";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 167008;
    name: "Taiko Katla (Alpha-6 Testnet)";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.katla.taiko.xyz"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc.katla.taiko.xyz"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "tko-katla";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "blockscout";
            readonly url: "https://explorer.test.taiko.xyz";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 167005;
    name: "Taiko (Alpha-3 Testnet)";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.test.taiko.xyz"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Taraxa Explorer";
            readonly url: "https://explorer.testnet.taraxa.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 842;
    name: "Taraxa Testnet";
    nativeCurrency: {
        readonly name: "Tara";
        readonly symbol: "TARA";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.testnet.taraxa.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Teloscan";
            readonly url: "https://www.teloscan.io/";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 246530709;
        };
    };
    id: 40;
    name: "Telos";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Telos";
        readonly symbol: "TLOS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.telos.net/evm"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Teloscan (testnet)";
            readonly url: "https://testnet.teloscan.io/";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 41;
    name: "Telos";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Telos";
        readonly symbol: "TLOS";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.telos.net/evm"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "TenetScan Mainnet";
            readonly url: "https://tenetscan.io";
            readonly apiUrl: "https://tenetscan.io/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1559;
    name: "Tenet";
    nativeCurrency: {
        readonly name: "TENET";
        readonly symbol: "TENET";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.tenet.org"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "tenet-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "5ireChain Explorer";
            readonly url: "https://explorer.5ire.network";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 997;
    name: "5ireChain Thunder Testnet";
    nativeCurrency: {
        readonly name: "5ire Token";
        readonly symbol: "5IRE";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc-testnet.5ire.network"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Vechain Explorer";
            readonly url: "https://explore.vechain.org";
        };
        readonly vechainStats: {
            readonly name: "Vechain Stats";
            readonly url: "https://vechainstats.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 100009;
    name: "Vechain";
    nativeCurrency: {
        readonly name: "VeChain";
        readonly symbol: "VET";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.vechain.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "WanScan";
            readonly url: "https://wanscan.org";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcDF6A1566e78EB4594c86Fe73Fcdc82429e97fbB";
            readonly blockCreated: 25312390;
        };
    };
    id: 888;
    name: "Wanchain";
    nativeCurrency: {
        readonly name: "WANCHAIN";
        readonly symbol: "WAN";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://gwan-ssl.wandevs.org:56891", "https://gwan2-ssl.wandevs.org"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "WanScanTest";
            readonly url: "https://wanscan.org";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0x11c89bF4496c39FB80535Ffb4c92715839CC5324";
            readonly blockCreated: 24743448;
        };
    };
    id: 999;
    name: "Wanchain Testnet";
    nativeCurrency: {
        readonly name: "WANCHAIN";
        readonly symbol: "WANt";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://gwan-ssl.wandevs.org:46891"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "wemixExplorer";
            readonly url: "https://explorer.wemix.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1111;
    name: "WEMIX";
    nativeCurrency: {
        readonly name: "WEMIX";
        readonly symbol: "WEMIX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.wemix.com"];
        };
        readonly public: {
            readonly http: readonly ["https://api.wemix.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "wemix-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "wemixExplorer";
            readonly url: "https://testnet.wemixscan.com";
            readonly apiUrl: "https://testnet.wemixscan.com/api";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1112;
    name: "WEMIX Testnet";
    nativeCurrency: {
        readonly name: "WEMIX";
        readonly symbol: "tWEMIX";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.test.wemix.com"];
        };
        readonly public: {
            readonly http: readonly ["https://api.test.wemix.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "wemix-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "OKLink";
            readonly url: "https://www.oklink.com/x1-test";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 624344;
        };
    };
    id: 195;
    name: "X1 Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "OKB";
        readonly symbol: "OKB";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://x1testrpc.okx.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly xinfin: {
            readonly name: "XinFin";
            readonly url: "https://explorer.xinfin.network";
        };
        readonly default: {
            readonly name: "Blocksscan";
            readonly url: "https://xdc.blocksscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 71542788;
        };
    };
    id: 50;
    name: "XinFin Network";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "XDC";
        readonly symbol: "XDC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.xinfin.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Blocksscan";
            readonly url: "https://apothem.blocksscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 59765389;
        };
    };
    id: 51;
    name: "Apothem Network";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "TXDC";
        readonly symbol: "TXDC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://erpc.apothem.network"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Beaconchain";
            readonly url: "https://zhejiang.beaconcha.in";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 1337803;
    name: "Zhejiang";
    nativeCurrency: {
        readonly name: "Zhejiang Ether";
        readonly symbol: "ZhejETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.zhejiang.ethpandaops.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "zkFair Explorer";
            readonly url: "https://scan.zkfair.io";
            readonly apiUrl: "https://scan.zkfair.io/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
            readonly blockCreated: 6090959;
        };
    };
    id: 42766;
    name: "ZKFair Mainnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "USD Coin";
        readonly symbol: "USDC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.zkfair.io"];
        };
        readonly public: {
            readonly http: readonly ["https://rpc.zkfair.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zkfair-mainnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "zkFair Explorer";
            readonly url: "https://testnet-scan.zkfair.io";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 43851;
    name: "ZKFair Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "USD Coin";
        readonly symbol: "USDC";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet-rpc.zkfair.io"];
        };
        readonly public: {
            readonly http: readonly ["https://testnet-rpc.zkfair.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zkfair-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Etherscan";
            readonly url: "https://era.zksync.network/";
            readonly apiUrl: "https://api-era.zksync.network/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
        };
    };
    id: 324;
    name: "zkSync Era";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.era.zksync.io"];
            readonly webSocket: readonly ["wss://mainnet.era.zksync.io/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom: {
        readonly getEip712Domain: viem_zksync.EIP712DomainFn<chains.ZkSyncTransactionSerializable, chains.ZkSyncEIP712TransactionSignable>;
    };
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.ZkSyncRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.ZkSyncRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.ZkSyncTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
                l1BatchNumber: bigint | null;
                l1BatchTimestamp: bigint | null;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransaction<boolean>>, chains.ZkSyncRpcTransaction<boolean>>) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: chains.ZkSyncTransactionType;
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
                l2ToL1Logs: chains.ZkSyncL2ToL1Log[];
            };
            type: "transactionReceipt";
        };
        readonly transactionRequest: {
            exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
            format: (args: ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas: bigint;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "eip4844" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            })) => ({
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: `0x${string}`;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x3" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            }) & {
                gasPerPubdata: never;
                paymaster: never;
                factoryDeps: never;
                paymasterInput: never;
                customSignature: never;
            };
            type: "transactionRequest";
        };
    };
    serializers: {
        readonly transaction: typeof viem_zksync.serializeTransaction;
    };
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zksync-era";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "zkExplorer";
            readonly url: "https://goerli.explorer.zksync.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
        };
    };
    id: 280;
    name: "zkSync Era Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.era.zksync.dev"];
            readonly webSocket: readonly ["wss://testnet.era.zksync.dev/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom: {
        readonly getEip712Domain: viem_zksync.EIP712DomainFn<chains.ZkSyncTransactionSerializable, chains.ZkSyncEIP712TransactionSignable>;
    };
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.ZkSyncRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.ZkSyncRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.ZkSyncTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
                l1BatchNumber: bigint | null;
                l1BatchTimestamp: bigint | null;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransaction<boolean>>, chains.ZkSyncRpcTransaction<boolean>>) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: chains.ZkSyncTransactionType;
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
                l2ToL1Logs: chains.ZkSyncL2ToL1Log[];
            };
            type: "transactionReceipt";
        };
        readonly transactionRequest: {
            exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
            format: (args: ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas: bigint;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "eip4844" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            })) => ({
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: `0x${string}`;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x3" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            }) & {
                gasPerPubdata: never;
                paymaster: never;
                factoryDeps: never;
                paymasterInput: never;
                customSignature: never;
            };
            type: "transactionRequest";
        };
    };
    serializers: {
        readonly transaction: typeof viem_zksync.serializeTransaction;
    };
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zksync-era-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "zkExplorer";
            readonly url: "https://sepolia.explorer.zksync.io/";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
        };
    };
    id: 300;
    name: "zkSync Sepolia Testnet";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.era.zksync.dev"];
            readonly webSocket: readonly ["wss://sepolia.era.zksync.dev/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom: {
        readonly getEip712Domain: viem_zksync.EIP712DomainFn<chains.ZkSyncTransactionSerializable, chains.ZkSyncEIP712TransactionSignable>;
    };
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.ZkSyncRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.ZkSyncRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.ZkSyncTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
                l1BatchNumber: bigint | null;
                l1BatchTimestamp: bigint | null;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransaction<boolean>>, chains.ZkSyncRpcTransaction<boolean>>) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "priority";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "priority" | "eip712";
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: chains.ZkSyncTransactionType;
                l1BatchNumber: bigint | null;
                l1BatchTxIndex: bigint | null;
                l2ToL1Logs: chains.ZkSyncL2ToL1Log[];
            };
            type: "transactionReceipt";
        };
        readonly transactionRequest: {
            exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
            format: (args: ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "legacy" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip2930" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                to?: `0x${string}` | null | undefined;
                value?: bigint | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "eip1559" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas: bigint;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "eip4844" | undefined;
            } & {
                gasPerPubdata?: undefined;
                customSignature?: undefined;
                paymaster?: undefined;
                paymasterInput?: undefined;
                factoryDeps?: undefined;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster: `0x${string}`;
                paymasterInput: `0x${string}`;
            }) | ({
                data?: `0x${string}` | undefined;
                from?: `0x${string}` | undefined;
                gas?: bigint | undefined;
                nonce?: number | undefined;
                value?: bigint | undefined;
                to?: `0x${string}` | null | undefined;
                gasPrice?: bigint | undefined;
                maxFeePerGas?: bigint | undefined;
                maxPriorityFeePerGas?: bigint | undefined;
                maxFeePerBlobGas?: bigint | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
                type?: "legacy" | "eip2930" | "eip1559" | "eip4844" | "priority" | "eip712" | undefined;
            } & Omit<viem.TransactionRequestBase<bigint, number>, "type"> & Partial<viem.FeeValuesEIP1559<bigint>> & {
                gasPerPubdata?: bigint | undefined;
                customSignature?: `0x${string}` | undefined;
                factoryDeps?: `0x${string}`[] | undefined;
                type?: "priority" | "eip712" | undefined;
            } & {
                paymaster?: undefined;
                paymasterInput?: undefined;
            })) => ({
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobs?: undefined;
                type?: "0x0" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x1" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type?: "0x2" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                value?: `0x${string}` | undefined;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: viem.AccessList | undefined;
                blobs?: undefined;
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: `0x${string}`;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type?: "0x3" | undefined;
                eip712Meta?: undefined;
            } | {
                data?: `0x${string}` | undefined;
                from: `0x${string}`;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                to: `0x${string}` | null | undefined;
                gasPrice?: undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                maxFeePerBlobGas: undefined;
                accessList?: viem.AccessList | undefined;
                blobs: readonly `0x${string}`[] | readonly Uint8Array[];
                type: "0xff" | "0x71";
                eip712Meta: chains.ZkSyncEip712Meta;
            }) & {
                gasPerPubdata: never;
                paymaster: never;
                factoryDeps: never;
                paymasterInput: never;
                customSignature: never;
            };
            type: "transactionRequest";
        };
    };
    serializers: {
        readonly transaction: typeof viem_zksync.serializeTransaction;
    };
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zksync-sepolia-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "ZetaScan";
            readonly url: "https://explorer.zetachain.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 7000;
    name: "ZetaChain";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Zeta";
        readonly symbol: "ZETA";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://zetachain-evm.blockpi.network/v1/rpc/public"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "ZetaScan";
            readonly url: "https://athens3.explorer.zetachain.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 7001;
    name: "ZetaChain Athens Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Zeta";
        readonly symbol: "aZETA";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://zetachain-athens-evm.blockpi.network/v1/rpc/public"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ethernal";
            readonly url: "https://evmx.zilliqa.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 32769;
    name: "Zilliqa";
    nativeCurrency: {
        readonly name: "Zilliqa";
        readonly symbol: "ZIL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.zilliqa.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zilliqa";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Ethernal";
            readonly url: "https://evmx.testnet.zilliqa.com";
        };
    };
    contracts?: {
        [x: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
    } | undefined;
    id: 33101;
    name: "Zilliqa Testnet";
    nativeCurrency: {
        readonly name: "Zilliqa";
        readonly symbol: "ZIL";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://dev-api.zilliqa.com"];
        };
    };
    sourceId?: number | undefined;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zilliqa-testnet";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Explorer";
            readonly url: "https://explorer.zora.energy";
            readonly apiUrl: "https://explorer.zora.energy/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 1: {
                readonly address: "0x9E6204F750cD866b299594e2aC9eA824E2e5f95c";
            };
        };
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 5882;
        };
        readonly portal: {
            readonly 1: {
                readonly address: "0x1a0ad011913A150f69f6A19DF447A0CfD9551054";
            };
        };
        readonly l1StandardBridge: {
            readonly 1: {
                readonly address: "0x3e2Ea9B92B7E48A52296fD261dc26fd995284631";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 7777777;
    name: "Zora";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Ether";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://rpc.zora.energy"];
            readonly webSocket: readonly ["wss://rpc.zora.energy"];
        };
    };
    sourceId: 1;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Zora Sepolia Explorer";
            readonly url: "https://sepolia.explorer.zora.energy/";
            readonly apiUrl: "https://sepolia.explorer.zora.energy/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0x2615B481Bd3E5A1C0C7Ca3Da1bdc663E8615Ade9";
            };
        };
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 83160;
        };
        readonly portal: {
            readonly 11155111: {
                readonly address: "0xeffE2C6cA9Ab797D418f0D91eA60807713f3536f";
            };
        };
        readonly l1StandardBridge: {
            readonly 11155111: {
                readonly address: "0x5376f1D543dcbB5BD416c56C189e4cB7399fCcCB";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 999999999;
    name: "Zora Sepolia";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Zora Sepolia";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.rpc.zora.energy"];
            readonly webSocket: readonly ["wss://sepolia.rpc.zora.energy"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
    readonly network: "zora-sepolia";
} | {
    blockExplorers: {
        readonly default: {
            readonly name: "Explorer";
            readonly url: "https://testnet.explorer.zora.energy";
            readonly apiUrl: "https://testnet.explorer.zora.energy/api";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 189123;
        };
        readonly portal: {
            readonly 5: {
                readonly address: "0xDb9F51790365e7dc196e7D072728df39Be958ACe";
            };
        };
        readonly gasPriceOracle: {
            readonly address: "0x420000000000000000000000000000000000000F";
        };
        readonly l1Block: {
            readonly address: "0x4200000000000000000000000000000000000015";
        };
        readonly l2CrossDomainMessenger: {
            readonly address: "0x4200000000000000000000000000000000000007";
        };
        readonly l2Erc721Bridge: {
            readonly address: "0x4200000000000000000000000000000000000014";
        };
        readonly l2StandardBridge: {
            readonly address: "0x4200000000000000000000000000000000000010";
        };
        readonly l2ToL1MessagePasser: {
            readonly address: "0x4200000000000000000000000000000000000016";
        };
    };
    id: 999;
    name: "Zora Goerli Testnet";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "Zora Goerli";
        readonly symbol: "ETH";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://testnet.rpc.zora.energy"];
            readonly webSocket: readonly ["wss://testnet.rpc.zora.energy"];
        };
    };
    sourceId: 5;
    testnet: true;
    custom?: Record<string, unknown> | undefined;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, chains.OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | chains.OpStackRpcTransaction<boolean>[];
            }>) => {
                baseFeePerGas: bigint | null;
                blobGasUsed: bigint;
                difficulty: bigint;
                excessBlobGas: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | chains.OpStackTransaction<boolean>[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: viem.Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            };
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                r: `0x${string}`;
                s: `0x${string}`;
                v: `0x${string}`;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                nonce: `0x${string}`;
                value: `0x${string}`;
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: `0x${string}` | undefined;
                yParity?: undefined;
                type: "0x0";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice: `0x${string}`;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x1";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: `0x${string}`;
                type: "0x2";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & chains.Omit<chains.PartialBy<{
                blockHash: `0x${string}` | null;
                blockNumber: `0x${string}` | null;
                from: `0x${string}`;
                gas: `0x${string}`;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: `0x${string}`;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: `0x${string}` | null;
                typeHex: `0x${string}` | null;
                v: `0x${string}`;
                value: `0x${string}`;
                yParity: `0x${string}`;
                gasPrice?: undefined;
                maxFeePerBlobGas: `0x${string}`;
                maxFeePerGas: `0x${string}`;
                maxPriorityFeePerGas: `0x${string}`;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: `0x${string}`;
                type: "0x3";
            }, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                v?: `0x${string}` | undefined;
                yParity?: `0x${string}` | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerBlobGas?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                accessList?: viem.AccessList | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                blobVersionedHashes?: `0x${string}`[] | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                r: `0x${string}`;
                s: `0x${string}`;
                v: bigint;
                to: `0x${string}` | null;
                from: `0x${string}`;
                gas: bigint;
                nonce: number;
                value: bigint;
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                hash: `0x${string}`;
                input: `0x${string}`;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                blobVersionedHashes?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes?: undefined;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: bigint;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "eip4844";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerBlobGas: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: viem.AccessList;
                blobVersionedHashes: `0x${string}`[];
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            };
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: chains.Assign<Partial<viem.RpcTransactionReceipt>, chains.OpStackRpcTransactionReceiptOverrides>) => {
                blobGasPrice?: bigint | undefined;
                blobGasUsed?: bigint | undefined;
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                logsBloom: `0x${string}`;
                root?: `0x${string}` | undefined;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: viem.TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            };
            type: "transactionReceipt";
        };
    };
    serializers: {
        readonly transaction: typeof chains.serializeTransactionOpStack;
    };
    fees?: viem.ChainFees<undefined> | undefined;
};
type ChainMapType = Record<SdkSupportedChainIds, ChainType>;
declare const CHAIN_MAP: ChainMapType;
declare const CHAIN_NAME_ID_MAP: Record<string, SdkSupportedChainIds>;

type RPCList = {
    readonly id: number;
    readonly rpcs: string[];
};
declare const RPCS: Array<RPCList>;
declare function chainRPCFallbacks(chain: Chain, fetchOptions?: HttpTransportConfig['fetchOptions']): viem.HttpTransport[];
declare const DEFAULT_RANK_OPTIONS: FallbackTransportConfig;

type ErrorObjectType = {
    message: string;
    reportToBugsnag?: boolean;
};
declare const BOND_ERROR_MESSAGES: Record<BondErrorNames, ErrorObjectType>;
declare const ERC20_ERROR_MESSAGES: Record<ERC20ErrorNames, ErrorObjectType>;
declare const ERC1155_ERROR_MESSAGES: Record<ERC1155ErrorNames, ErrorObjectType>;
declare const LOCKER_ERROR_MESSAGES: Record<LockerErrorNames, ErrorObjectType>;
declare const MERKLE_ERROR_MESSAGES: Record<MerkleErrorNames, ErrorObjectType>;
declare const ZAP_ERROR_MESSAGES: Record<ZapErrorNames, ErrorObjectType>;
declare const CONTRACT_ERROR_MESSAGES: Record<AllContractErrorNames, ErrorObjectType>;

declare const COINGECKO_NETWORK_IDS: {
    readonly 1: "ethereum";
    readonly 10: "optimistic-ethereum";
    readonly 42161: "arbitrum-one";
    readonly 43114: "avalanche";
    readonly 8453: "base";
    readonly 137: "polygon-pos";
    readonly 56: "binance-smart-chain";
    readonly 11155111: "ethereum";
    readonly 81457: "ethereum";
    readonly 168587773: "ethereum";
    readonly 43113: "ethereum";
};
type BaseToken = {
    name: string;
    symbol: string;
    address: `0x${string}`;
    decimals: number;
    image?: {
        small: string | null;
        large: string | null;
    };
};
type WrappedToken = {
    image: string;
    tokenAddress: `0x${string}`;
    nativeSymbol: string;
    oneInchSymbol: 'USDT' | 'USDbC' | 'USDB';
    decimals: number;
};
declare const WRAPPED_NATIVE_TOKENS: Record<SdkSupportedChainIds, WrappedToken>;
declare const TOKENS: Record<SdkSupportedChainIds, Record<`0x${string}`, BaseToken>>;
type TokenChain = keyof typeof TOKENS;
type TokenSymbol = keyof (typeof TOKENS)[TokenChain];

declare function commify(x: number | string): string;
declare function uncommify(str: string): string;
declare function handleScientificNotation(num: number | string): string;
declare function countLeadingZeros(num: number | string): number | undefined;
declare function getValueAfterLeadingZeros(num: number): number | undefined;
declare function countDecimals(value: number | string): number;
declare function toFixed(value: number, t: number): number;
declare function wei(num: number | string, decimals?: number): bigint;
declare function toNumber(num: bigint, decimals: number): number;
declare function shortenNumber(num: number | string, prefix?: string): string;
declare function applyDecimals(num: string | number): string;
declare function precisionRound(number: number, precision: number): number;

declare class Bond {
    protected chainId: SdkSupportedChainIds;
    constructor(chainId: SdkSupportedChainIds);
    getCreationFee(): Promise<bigint>;
    getTokensByReserveToken(params: {
        reserveToken: `0x${string}`;
        start?: number;
        end?: number;
    }): Promise<readonly `0x${string}`[]>;
    getTokensByCreator(params: {
        creator: `0x${string}`;
        start?: number;
        end?: number;
    }): Promise<readonly `0x${string}`[]>;
}

declare class Client {
    private static instance?;
    private walletClient?;
    private publicClients;
    private chainId?;
    constructor();
    connect(provider?: any): Promise<`0x${string}`>;
    private get walletState();
    private set walletState(value);
    change(): Promise<void>;
    disconnect(): void;
    account(): Promise<`0x${string}` | null>;
    getNativeBalance(params?: {
        walletAddress: `0x${string}`;
        chainId: number;
    }): Promise<bigint>;
    _getPublicClient(id: number): PublicClient;
    getWalletClient(): {
        account: viem.Account | undefined;
        batch?: {
            multicall?: boolean | {
                batchSize?: number | undefined;
                wait?: number | undefined;
            } | undefined;
        } | undefined;
        cacheTime: number;
        chain: Chain | undefined;
        key: string;
        name: string;
        pollingInterval: number;
        request: viem.EIP1193RequestFn<viem.WalletRpcSchema>;
        transport: viem.TransportConfig<string, viem.EIP1193RequestFn> & Record<string, any>;
        type: string;
        uid: string;
        addChain: (args: viem.AddChainParameters) => Promise<void>;
        deployContract: <const abi extends viem.Abi | readonly unknown[], chainOverride extends Chain | undefined>(args: viem.DeployContractParameters<abi, Chain | undefined, viem.Account | undefined, chainOverride>) => Promise<`0x${string}`>;
        getAddresses: () => Promise<viem.GetAddressesReturnType>;
        getChainId: () => Promise<number>;
        getPermissions: () => Promise<viem.GetPermissionsReturnType>;
        prepareTransactionRequest: <const TRequest extends viem.PrepareTransactionRequestRequest<Chain | undefined, TChainOverride>, TChainOverride extends Chain | undefined = undefined, TAccountOverride extends `0x${string}` | viem.Account | undefined = undefined>(args: viem.PrepareTransactionRequestParameters<Chain | undefined, viem.Account | undefined, TChainOverride, TAccountOverride, TRequest>) => Promise<viem.UnionRequiredBy<Extract<viem.UnionOmit<viem.ExtractChainFormatterParameters<viem.DeriveChain<Chain, TChainOverride>, "transactionRequest", viem.TransactionRequest>, "from"> & (viem.DeriveChain<Chain, TChainOverride> extends infer T_12 ? T_12 extends viem.DeriveChain<Chain, TChainOverride> ? T_12 extends Chain ? {
            chain: T_12;
        } : {
            chain?: undefined;
        } : never : never) & (viem.DeriveAccount<viem.Account | undefined, TAccountOverride> extends infer T_13 ? T_13 extends viem.DeriveAccount<viem.Account | undefined, TAccountOverride> ? T_13 extends viem.Account ? {
            account: T_13;
            from: `0x${string}`;
        } : {
            account?: undefined;
            from?: undefined;
        } : never : never), viem.IsNever<((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_14 ? T_14 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_14 extends "legacy" ? viem.TransactionRequestLegacy : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_15 ? T_15 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_15 extends "eip1559" ? viem.TransactionRequestEIP1559 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_16 ? T_16 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_16 extends "eip2930" ? viem.TransactionRequestEIP2930 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_17 ? T_17 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_17 extends "eip4844" ? viem.TransactionRequestEIP4844 : never : never : never)> extends true ? unknown : Partial<((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_18 ? T_18 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_18 extends "legacy" ? viem.TransactionRequestLegacy : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_19 ? T_19 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_19 extends "eip1559" ? viem.TransactionRequestEIP1559 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_20 ? T_20 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_20 extends "eip2930" ? viem.TransactionRequestEIP2930 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_21 ? T_21 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_21 extends "eip4844" ? viem.TransactionRequestEIP4844 : never : never : never)>> & {
            chainId?: number | undefined;
        }, (TRequest["parameters"] extends viem.PrepareTransactionRequestParameterType[] ? TRequest["parameters"][number] : viem.PrepareTransactionRequestParameterType) extends infer T_22 ? T_22 extends (TRequest["parameters"] extends viem.PrepareTransactionRequestParameterType[] ? TRequest["parameters"][number] : viem.PrepareTransactionRequestParameterType) ? T_22 extends "fees" ? "gasPrice" | "maxFeePerGas" | "maxPriorityFeePerGas" : T_22 : never : never> & (unknown extends TRequest["kzg"] ? {} : Pick<TRequest, "kzg">) extends infer T ? { [K in keyof T]: (viem.UnionRequiredBy<Extract<viem.UnionOmit<viem.ExtractChainFormatterParameters<viem.DeriveChain<Chain, TChainOverride>, "transactionRequest", viem.TransactionRequest>, "from"> & (viem.DeriveChain<Chain, TChainOverride> extends infer T_1 ? T_1 extends viem.DeriveChain<Chain, TChainOverride> ? T_1 extends Chain ? {
            chain: T_1;
        } : {
            chain?: undefined;
        } : never : never) & (viem.DeriveAccount<viem.Account | undefined, TAccountOverride> extends infer T_2 ? T_2 extends viem.DeriveAccount<viem.Account | undefined, TAccountOverride> ? T_2 extends viem.Account ? {
            account: T_2;
            from: `0x${string}`;
        } : {
            account?: undefined;
            from?: undefined;
        } : never : never), viem.IsNever<((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_3 ? T_3 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_3 extends "legacy" ? viem.TransactionRequestLegacy : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_4 ? T_4 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_4 extends "eip1559" ? viem.TransactionRequestEIP1559 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_5 ? T_5 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_5 extends "eip2930" ? viem.TransactionRequestEIP2930 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_6 ? T_6 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_6 extends "eip4844" ? viem.TransactionRequestEIP4844 : never : never : never)> extends true ? unknown : Partial<((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_7 ? T_7 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_7 extends "legacy" ? viem.TransactionRequestLegacy : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_8 ? T_8 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_8 extends "eip1559" ? viem.TransactionRequestEIP1559 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_9 ? T_9 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_9 extends "eip2930" ? viem.TransactionRequestEIP2930 : never : never : never) | ((TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) extends infer T_10 ? T_10 extends (TRequest["type"] extends string ? TRequest["type"] : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)> extends "legacy" ? unknown : viem.GetTransactionType<TRequest, (TRequest extends ({
            accessList?: undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & viem.FeeValuesLegacy) | viem.Opaque<viem.TransactionSerializableLegacy, TRequest> | viem.Opaque<viem.TransactionRequestLegacy, TRequest> ? "legacy" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: undefined;
            maxFeePerBlobGas?: undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: undefined;
        } & (viem.OneOf<{
            maxFeePerGas: bigint;
        } | {
            maxPriorityFeePerGas: bigint;
        }, viem.FeeValuesEIP1559> & {
            accessList?: viem.AccessList | undefined;
        })) | viem.Opaque<viem.TransactionSerializableEIP1559, TRequest> | viem.Opaque<viem.TransactionRequestEIP1559, TRequest> ? "eip1559" : never) | (TRequest extends ({
            accessList?: viem.AccessList | undefined;
            blobs?: undefined;
            blobVersionedHashes?: undefined;
            gasPrice?: bigint | undefined;
            sidecars?: undefined;
        } & Partial<viem.FeeValuesLegacy> & {
            accessList: viem.AccessList | undefined;
        }) | viem.Opaque<viem.TransactionSerializableEIP2930, TRequest> | viem.Opaque<viem.TransactionRequestEIP2930, TRequest> ? "eip2930" : never) | (TRequest extends ({
            accessList?: undefined;
            blobs?: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
            blobVersionedHashes?: readonly `0x${string}`[] | undefined;
            maxFeePerBlobGas?: bigint | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            sidecars?: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        } & (Partial<viem.FeeValuesEIP4844> & viem.OneOf<{
            blobs: readonly `0x${string}`[] | readonly Uint8Array[] | undefined;
        } | {
            blobVersionedHashes: readonly `0x${string}`[] | undefined;
        } | {
            sidecars: false | readonly viem.BlobSidecar<`0x${string}`>[] | undefined;
        }, viem.TransactionSerializableEIP4844>)) | viem.Opaque<viem.TransactionSerializableEIP4844, TRequest> | viem.Opaque<viem.TransactionRequestEIP4844, TRequest> ? "eip4844" : never) | (TRequest["type"] extends string ? TRequest["type"] : never)>) ? T_10 extends "eip4844" ? viem.TransactionRequestEIP4844 : never : never : never)>> & {
            chainId?: number | undefined;
        }, (TRequest["parameters"] extends viem.PrepareTransactionRequestParameterType[] ? TRequest["parameters"][number] : viem.PrepareTransactionRequestParameterType) extends infer T_11 ? T_11 extends (TRequest["parameters"] extends viem.PrepareTransactionRequestParameterType[] ? TRequest["parameters"][number] : viem.PrepareTransactionRequestParameterType) ? T_11 extends "fees" ? "gasPrice" | "maxFeePerGas" | "maxPriorityFeePerGas" : T_11 : never : never> & (unknown extends TRequest["kzg"] ? {} : Pick<TRequest, "kzg">))[K]; } : never>;
        requestAddresses: () => Promise<viem.RequestAddressesReturnType>;
        requestPermissions: (args: {
            [x: string]: Record<string, any>;
            eth_accounts: Record<string, any>;
        }) => Promise<viem.RequestPermissionsReturnType>;
        sendRawTransaction: (args: viem.SendRawTransactionParameters) => Promise<`0x${string}`>;
        sendTransaction: <const TRequest_1 extends viem.SendTransactionRequest<Chain | undefined, TChainOverride_1>, TChainOverride_1 extends Chain | undefined = undefined>(args: viem.SendTransactionParameters<Chain | undefined, viem.Account | undefined, TChainOverride_1, TRequest_1>) => Promise<`0x${string}`>;
        signMessage: (args: viem.SignMessageParameters<viem.Account | undefined>) => Promise<`0x${string}`>;
        signTransaction: <TChainOverride_2 extends Chain | undefined>(args: viem.SignTransactionParameters<Chain | undefined, viem.Account | undefined, TChainOverride_2>) => Promise<`0x02${string}` | `0x01${string}` | `0x03${string}` | viem.TransactionSerializedLegacy>;
        signTypedData: <const TTypedData extends {
            [x: string]: readonly viem.TypedDataParameter[];
            [x: `string[${string}]`]: undefined;
            [x: `function[${string}]`]: undefined;
            [x: `address[${string}]`]: undefined;
            [x: `uint256[${string}]`]: undefined;
            [x: `uint8[${string}]`]: undefined;
            [x: `uint16[${string}]`]: undefined;
            [x: `uint128[${string}]`]: undefined;
            [x: `bool[${string}]`]: undefined;
            [x: `uint40[${string}]`]: undefined;
            [x: `bytes[${string}]`]: undefined;
            [x: `bytes4[${string}]`]: undefined;
            [x: `uint176[${string}]`]: undefined;
            [x: `bytes32[${string}]`]: undefined;
            [x: `bytes1[${string}]`]: undefined;
            [x: `bytes10[${string}]`]: undefined;
            [x: `bytes5[${string}]`]: undefined;
            [x: `bytes2[${string}]`]: undefined;
            [x: `bytes6[${string}]`]: undefined;
            [x: `bytes3[${string}]`]: undefined;
            [x: `bytes14[${string}]`]: undefined;
            [x: `bytes23[${string}]`]: undefined;
            [x: `bytes7[${string}]`]: undefined;
            [x: `bytes18[${string}]`]: undefined;
            [x: `bytes9[${string}]`]: undefined;
            [x: `bytes12[${string}]`]: undefined;
            [x: `bytes21[${string}]`]: undefined;
            [x: `bytes8[${string}]`]: undefined;
            [x: `bytes25[${string}]`]: undefined;
            [x: `bytes30[${string}]`]: undefined;
            [x: `bytes19[${string}]`]: undefined;
            [x: `bytes16[${string}]`]: undefined;
            [x: `bytes22[${string}]`]: undefined;
            [x: `bytes11[${string}]`]: undefined;
            [x: `bytes13[${string}]`]: undefined;
            [x: `bytes15[${string}]`]: undefined;
            [x: `bytes17[${string}]`]: undefined;
            [x: `bytes20[${string}]`]: undefined;
            [x: `bytes24[${string}]`]: undefined;
            [x: `bytes26[${string}]`]: undefined;
            [x: `bytes27[${string}]`]: undefined;
            [x: `bytes28[${string}]`]: undefined;
            [x: `bytes29[${string}]`]: undefined;
            [x: `bytes31[${string}]`]: undefined;
            [x: `int[${string}]`]: undefined;
            [x: `int56[${string}]`]: undefined;
            [x: `int72[${string}]`]: undefined;
            [x: `int32[${string}]`]: undefined;
            [x: `int8[${string}]`]: undefined;
            [x: `int240[${string}]`]: undefined;
            [x: `int248[${string}]`]: undefined;
            [x: `int16[${string}]`]: undefined;
            [x: `int40[${string}]`]: undefined;
            [x: `int24[${string}]`]: undefined;
            [x: `int48[${string}]`]: undefined;
            [x: `int64[${string}]`]: undefined;
            [x: `int80[${string}]`]: undefined;
            [x: `int88[${string}]`]: undefined;
            [x: `int96[${string}]`]: undefined;
            [x: `int104[${string}]`]: undefined;
            [x: `int112[${string}]`]: undefined;
            [x: `int120[${string}]`]: undefined;
            [x: `int128[${string}]`]: undefined;
            [x: `int136[${string}]`]: undefined;
            [x: `int144[${string}]`]: undefined;
            [x: `int152[${string}]`]: undefined;
            [x: `int160[${string}]`]: undefined;
            [x: `int168[${string}]`]: undefined;
            [x: `int176[${string}]`]: undefined;
            [x: `int184[${string}]`]: undefined;
            [x: `int192[${string}]`]: undefined;
            [x: `int200[${string}]`]: undefined;
            [x: `int208[${string}]`]: undefined;
            [x: `int216[${string}]`]: undefined;
            [x: `int224[${string}]`]: undefined;
            [x: `int232[${string}]`]: undefined;
            [x: `int256[${string}]`]: undefined;
            [x: `uint[${string}]`]: undefined;
            [x: `uint56[${string}]`]: undefined;
            [x: `uint72[${string}]`]: undefined;
            [x: `uint32[${string}]`]: undefined;
            [x: `uint240[${string}]`]: undefined;
            [x: `uint248[${string}]`]: undefined;
            [x: `uint24[${string}]`]: undefined;
            [x: `uint48[${string}]`]: undefined;
            [x: `uint64[${string}]`]: undefined;
            [x: `uint80[${string}]`]: undefined;
            [x: `uint88[${string}]`]: undefined;
            [x: `uint96[${string}]`]: undefined;
            [x: `uint104[${string}]`]: undefined;
            [x: `uint112[${string}]`]: undefined;
            [x: `uint120[${string}]`]: undefined;
            [x: `uint136[${string}]`]: undefined;
            [x: `uint144[${string}]`]: undefined;
            [x: `uint152[${string}]`]: undefined;
            [x: `uint160[${string}]`]: undefined;
            [x: `uint168[${string}]`]: undefined;
            [x: `uint184[${string}]`]: undefined;
            [x: `uint192[${string}]`]: undefined;
            [x: `uint200[${string}]`]: undefined;
            [x: `uint208[${string}]`]: undefined;
            [x: `uint216[${string}]`]: undefined;
            [x: `uint224[${string}]`]: undefined;
            [x: `uint232[${string}]`]: undefined;
            string?: undefined;
            address?: undefined;
            uint256?: undefined;
            uint8?: undefined;
            uint16?: undefined;
            uint128?: undefined;
            bool?: undefined;
            uint40?: undefined;
            bytes?: undefined;
            bytes4?: undefined;
            uint176?: undefined;
            bytes32?: undefined;
            bytes1?: undefined;
            bytes10?: undefined;
            bytes5?: undefined;
            bytes2?: undefined;
            bytes6?: undefined;
            bytes3?: undefined;
            bytes14?: undefined;
            bytes23?: undefined;
            bytes7?: undefined;
            bytes18?: undefined;
            bytes9?: undefined;
            bytes12?: undefined;
            bytes21?: undefined;
            bytes8?: undefined;
            bytes25?: undefined;
            bytes30?: undefined;
            bytes19?: undefined;
            bytes16?: undefined;
            bytes22?: undefined;
            bytes11?: undefined;
            bytes13?: undefined;
            bytes15?: undefined;
            bytes17?: undefined;
            bytes20?: undefined;
            bytes24?: undefined;
            bytes26?: undefined;
            bytes27?: undefined;
            bytes28?: undefined;
            bytes29?: undefined;
            bytes31?: undefined;
            int56?: undefined;
            int72?: undefined;
            int32?: undefined;
            int8?: undefined;
            int240?: undefined;
            int248?: undefined;
            int16?: undefined;
            int40?: undefined;
            int24?: undefined;
            int48?: undefined;
            int64?: undefined;
            int80?: undefined;
            int88?: undefined;
            int96?: undefined;
            int104?: undefined;
            int112?: undefined;
            int120?: undefined;
            int128?: undefined;
            int136?: undefined;
            int144?: undefined;
            int152?: undefined;
            int160?: undefined;
            int168?: undefined;
            int176?: undefined;
            int184?: undefined;
            int192?: undefined;
            int200?: undefined;
            int208?: undefined;
            int216?: undefined;
            int224?: undefined;
            int232?: undefined;
            int256?: undefined;
            uint56?: undefined;
            uint72?: undefined;
            uint32?: undefined;
            uint240?: undefined;
            uint248?: undefined;
            uint24?: undefined;
            uint48?: undefined;
            uint64?: undefined;
            uint80?: undefined;
            uint88?: undefined;
            uint96?: undefined;
            uint104?: undefined;
            uint112?: undefined;
            uint120?: undefined;
            uint136?: undefined;
            uint144?: undefined;
            uint152?: undefined;
            uint160?: undefined;
            uint168?: undefined;
            uint184?: undefined;
            uint192?: undefined;
            uint200?: undefined;
            uint208?: undefined;
            uint216?: undefined;
            uint224?: undefined;
            uint232?: undefined;
        } | {
            [key: string]: unknown;
        }, TPrimaryType extends string>(args: viem.SignTypedDataParameters<TTypedData, TPrimaryType, viem.Account | undefined>) => Promise<`0x${string}`>;
        switchChain: (args: viem.SwitchChainParameters) => Promise<void>;
        watchAsset: (args: viem.WatchAssetParams) => Promise<boolean>;
        writeContract: <const abi_1 extends viem.Abi | readonly unknown[], functionName extends viem.ContractFunctionName<abi_1, "nonpayable" | "payable">, args extends viem.ContractFunctionArgs<abi_1, "nonpayable" | "payable", functionName>, TChainOverride_3 extends Chain | undefined = undefined>(args: viem.WriteContractParameters<abi_1, functionName, args, Chain | undefined, viem.Account | undefined, TChainOverride_3>) => Promise<`0x${string}`>;
        extend: <const client extends {
            [x: string]: unknown;
            account?: undefined;
            batch?: undefined;
            cacheTime?: undefined;
            chain?: undefined;
            key?: undefined;
            name?: undefined;
            pollingInterval?: undefined;
            request?: undefined;
            transport?: undefined;
            type?: undefined;
            uid?: undefined;
        } & Partial<Pick<viem.PublicActions<viem.Transport, Chain | undefined, viem.Account | undefined>, "getChainId" | "prepareTransactionRequest" | "sendRawTransaction" | "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "readContract" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<Chain | undefined, viem.Account | undefined>, "sendTransaction" | "writeContract">>>(fn: (client: viem.Client<viem.Transport, Chain | undefined, viem.Account | undefined, viem.WalletRpcSchema, viem.WalletActions<Chain | undefined, viem.Account | undefined>>) => client) => viem.Client<viem.Transport, Chain | undefined, viem.Account | undefined, viem.WalletRpcSchema, { [K_1 in keyof client]: client[K_1]; } & viem.WalletActions<Chain | undefined, viem.Account | undefined>>;
    } | undefined;
    withPublicClient(publicClient: PublicClient): this;
    withWalletClient(walletClient: WalletClient): this;
    withPrivateKey(privateKey: `0x${string}`): this;
    withAccount(account: `0x${string}`, provider?: any): this;
    withProvider(provider: any): Promise<this>;
}

type IpfsHashUrl = `ipfs://${string}`;
type HttpUrl = `http://${string}` | `https://${string}`;
type MediaUploadParams = {
    filebaseApiKey: string;
    media: Blob;
};
type MetadataUploadParams = {
    filebaseApiKey: string;
    image: IpfsHashUrl | HttpUrl;
    name: string;
    description?: string;
    external_url?: string;
    attributes?: {
        trait_type: string;
        value: string;
    }[];
    video?: IpfsHashUrl | HttpUrl;
};

type TokenContractReadWriteArgs<A extends Abi, T extends ContractFunctionName<A, 'view' | 'pure'> | ContractFunctionName<A, 'payable' | 'nonpayable'>, R extends ContractFunctionArgs<A, 'view' | 'pure', T> | ContractFunctionArgs<A, 'payable' | 'nonpayable', T>, C extends ContractNames = ContractNames> = (R extends readonly [] ? {} : {
    args: R;
}) & (C extends 'ERC20' | 'ERC1155' ? {
    tokenAddress: `0x${string}`;
    functionName: T;
} : {
    functionName: T;
});
type WriteTransactionCallbacks = {
    debug?: (args: any) => void;
    onAllowanceSignatureRequest?: () => void;
    onAllowanceSigned?: () => void;
    onAllowanceSuccess?: (receipt: TransactionReceipt) => void;
    onSignatureRequest?: () => void;
    onSigned?: (tx: `0x${string}`) => void;
    onSuccess?: (receipt: TransactionReceipt) => void;
    onError?: (error: unknown) => void;
};
type CommonWriteParams = WriteTransactionCallbacks & {
    value?: bigint;
};
type GenericWriteParams<A extends Abi = Abi, T extends ContractFunctionName<A, 'payable' | 'nonpayable'> = ContractFunctionName<A, 'payable' | 'nonpayable'>, R extends ContractFunctionArgs<A, 'payable' | 'nonpayable', T> = ContractFunctionArgs<A, 'payable' | 'nonpayable', T>, C extends ContractNames = ContractNames> = TokenContractReadWriteArgs<A, T, R, C> & CommonWriteParams;
type CurveType = 'LINEAR' | 'EXPONENTIAL' | 'LOGARITHMIC' | 'FLAT';
type TradeType = 'buy' | 'sell';
declare global {
    var mcv2Hardhat: Partial<{
        [K in ContractNames]: Partial<{
            [K in number]: `0x${string}`;
        }>;
    }>;
}

type ReserveToken = {
    address: `0x${string}`;
    decimals: number;
};
type StepData = {
    rangeTo: number;
    price: number;
}[];
type CurveParameter = {
    curveType: CurveType;
    stepCount: number;
    maxSupply: number;
    initialMintingPrice: number;
    finalMintingPrice: number;
    creatorAllocation?: number;
};
type WithCurveData = {
    curveData: CurveParameter;
    stepData?: never;
};
type WithStepData = {
    curveData?: never;
    stepData: StepData;
};
type CreateERC20TokenParams = {
    name: string;
    reserveToken: ReserveToken;
    buyRoyalty?: number;
    sellRoyalty?: number;
} & (WithCurveData | WithStepData);
type CreateERC1155TokenParams = CreateERC20TokenParams & {
    metadataUrl: IpfsHashUrl | HttpUrl;
};
type CreateTokenParams = CreateERC20TokenParams & {
    tokenType: 'ERC20' | 'ERC1155';
    symbol: string;
};
type GenerateStepArgs = CreateTokenParams & {
    curveData: CurveParameter;
};
type BondApprovedParams<T extends TokenType, TT extends TradeType = TradeType> = T extends 'ERC20' ? {
    walletAddress: `0x${string}`;
    amountToSpend: bigint;
    tradeType: TT;
} : TT extends 'buy' ? {
    walletAddress: `0x${string}`;
    amountToSpend: bigint;
    tradeType: TT;
} : TT extends 'sell' ? {
    walletAddress: `0x${string}`;
    tradeType: TT;
} : never;
type BuySellCommonParams = WriteTransactionCallbacks & {
    amount: bigint;
    recipient?: `0x${string}`;
    slippage?: number;
};
type TransferCommonParams = WriteTransactionCallbacks & {
    recipient: `0x${string}`;
    amount: bigint;
};

type TokenHelperConstructorParams = {
    symbolOrAddress: string;
    chainId: SdkSupportedChainIds;
    tokenType: TokenType;
};
type TokenCreateAirdropParams = {
    title: string;
    wallets: `0x${string}`[];
    amountPerClaim: number;
    startTime?: Date;
    endTime: Date;
    filebaseApiKey: string;
} & WriteTransactionCallbacks;

type CreateAirdropParams = {
    token: `0x${string}`;
    isERC20: boolean;
    amountPerClaim: bigint;
    walletCount: number;
    startTime: number;
    endTime: number;
    merkleRoot: `0x${string}`;
    title: string;
    ipfsCID: string;
};

declare class Airdrop {
    protected chainId: SdkSupportedChainIds;
    constructor(chainId: SdkSupportedChainIds);
    getTotalAirdropCount(): Promise<bigint>;
    getAirdropById(airdropId: number): Promise<{
        token: `0x${string}`;
        isERC20: boolean;
        walletCount: number;
        claimCount: number;
        amountPerClaim: bigint;
        startTime: number;
        endTime: number;
        owner: `0x${string}`;
        refundedAt: number;
        merkleRoot: `0x${string}`;
        title: string;
        ipfsCID: string;
    }>;
    getAmountClaimed(airdropId: number): Promise<bigint>;
    getAmountLeft(airdropId: number): Promise<bigint>;
    getAirdropIdsByOwner(params: {
        owner: `0x${string}`;
        start?: number;
        end?: number;
    }): Promise<readonly bigint[]>;
    getAirdropIdsByToken(params: {
        token: `0x${string}`;
        start?: number;
        end?: number;
    }): Promise<readonly bigint[]>;
    getIsClaimed(airdropId: number, account: `0x${string}`): Promise<boolean>;
    getIsWhitelistOnly(airdropId: number): Promise<boolean>;
    getMerkleProof(airdropId: number): Promise<`0x${string}`[]>;
    getIsWhitelisted(airdropId: number, account: `0x${string}`): Promise<boolean>;
    claimAirdrop(params: {
        airdropId: number;
    } & WriteTransactionCallbacks): Promise<viem.TransactionReceipt | undefined>;
    createAirdrop(params: CreateAirdropParams & WriteTransactionCallbacks): Promise<viem.TransactionReceipt | undefined>;
    cancelAirdrop(params: {
        airdropId: number;
    } & WriteTransactionCallbacks): Promise<viem.TransactionReceipt | undefined>;
}

declare class Ipfs {
    add(apiKey: string, blob: Blob): Promise<CIDString>;
    private isIpfsUrl;
    private isHttpUrl;
    private validateHttpUrl;
    hashToGatewayUrl(hash: string, gateway?: string): string;
    gatewayUrlToHash(url: string): IpfsHashUrl;
    validateIpfsHash(ipfsUrl: string): true;
    upload(params: MediaUploadParams): Promise<string>;
    uploadMetadata(data: MetadataUploadParams): Promise<IpfsHashUrl>;
}

type USDValueOptions = {
    tokenAddress: `0x${string}`;
    tokenDecimals: number;
};
declare class OneInch {
    private chainId;
    constructor(chainId: SdkSupportedChainIds);
    getUsdRate({ tokenAddress, tokenDecimals }: USDValueOptions): Promise<{
        rate: number;
        stableCoin: {
            address: `0x${string}`;
            symbol: string;
            decimals: bigint;
        };
    } | null>;
}

declare class Token<T extends TokenType> {
    private tokenAddress;
    protected clientHelper: Client;
    protected airdropHelper: Airdrop;
    protected oneinch: OneInch;
    protected ipfsHelper: Ipfs;
    protected symbol?: string;
    protected tokenType: T;
    protected chain: Chain;
    protected chainId: SdkSupportedChainIds;
    constructor(params: TokenHelperConstructorParams);
    protected getConnectedWalletAddress(): Promise<`0x${string}`>;
    protected tokenToApprove(tradeType: TradeType): Promise<`0x${string}`>;
    bondContractApproved(params: BondApprovedParams<T>): Promise<boolean>;
    private contractIsApproved;
    private approveContract;
    private approveBond;
    protected getCreationFee(): Promise<bigint>;
    protected zapAvailable(): Promise<boolean>;
    exists(): Promise<boolean>;
    getReserveToken(): Promise<{
        address: `0x${string}`;
        name: string;
        symbol: string;
        decimals: number;
    }>;
    getReserveTokenAddress(): Promise<`0x${string}`>;
    getTokenAddress(): `0x${string}`;
    getUsdRate(amount?: number): Promise<{
        usdRate: null;
        stableCoin: null;
    } | {
        usdRate: number;
        stableCoin: {
            address: `0x${string}`;
            symbol: string;
            decimals: bigint;
        };
    }>;
    getDetail(): Promise<{
        mintRoyalty: number;
        burnRoyalty: number;
        info: {
            creator: `0x${string}`;
            token: `0x${string}`;
            decimals: number;
            symbol: string;
            name: string;
            createdAt: number;
            currentSupply: bigint;
            maxSupply: bigint;
            priceForNextMint: bigint;
            reserveToken: `0x${string}`;
            reserveDecimals: number;
            reserveSymbol: string;
            reserveName: string;
            reserveBalance: bigint;
        };
        steps: readonly {
            rangeTo: bigint;
            price: bigint;
        }[];
    }>;
    getTokenBond(): Promise<{
        creator: `0x${string}`;
        mintRoyalty: number;
        burnRoyalty: number;
        createdAt: number;
        reserveToken: `0x${string}`;
        reserveBalance: bigint;
    }>;
    getSteps(): Promise<readonly {
        rangeTo: bigint;
        price: bigint;
    }[]>;
    getMaxSupply(): Promise<bigint>;
    getPriceForNextMint(): Promise<bigint>;
    getSellEstimation(amount: bigint): Promise<readonly [bigint, bigint]>;
    getBuyEstimation(amount: bigint): Promise<readonly [bigint, bigint]>;
    protected checkAndPrepareCreateArgs(params: (CreateERC20TokenParams | CreateERC1155TokenParams) & Omit<CommonWriteParams, 'value'>): Promise<{
        args: {
            tokenParams: {
                name: string;
                symbol: string;
                uri?: string | undefined;
            };
            bondParams: {
                mintRoyalty: number;
                burnRoyalty: number;
                reserveToken: `0x${string}`;
                maxSupply: bigint;
                stepRanges: bigint[];
                stepPrices: bigint[];
            };
        };
        fee: bigint;
    }>;
    buy(params: BuySellCommonParams & {
        allowanceAmount?: bigint;
    }): Promise<viem.TransactionReceipt | undefined>;
    sell(params: BuySellCommonParams & {
        allowanceAmount?: T extends 'ERC20' ? bigint : never;
    }): Promise<viem.TransactionReceipt | undefined>;
    transfer(params: TransferCommonParams): Promise<viem.TransactionReceipt | undefined>;
    createAirdrop(params: TokenCreateAirdropParams): Promise<viem.TransactionReceipt | undefined>;
}

declare class ERC1155 extends Token<'ERC1155'> {
    constructor(params: Omit<TokenHelperConstructorParams, 'tokenType'>);
    getBalanceOf(walletAddress: `0x${string}`): Promise<bigint>;
    getBalanceOfBatch(walletAddresses: `0x${string}`[]): Promise<readonly bigint[]>;
    getBondAddress(): Promise<`0x${string}`>;
    getContractURI(): Promise<string>;
    getDecimals(): Promise<number>;
    getIsApprovedForAll(params: {
        owner: `0x${string}`;
        spender: `0x${string}`;
    }): Promise<boolean>;
    getName(): Promise<string>;
    getSupportsInterface(interfaceId: `0x${string}`): Promise<boolean>;
    getSymbol(): Promise<string>;
    getTotalSupply(): Promise<bigint>;
    getMetadataUri(): Promise<string>;
    getImageUri(): Promise<any>;
    create(params: CreateERC1155TokenParams & Omit<CommonWriteParams, 'value'>): Promise<viem.TransactionReceipt | undefined>;
    approve(params: {
        spender: `0x${string}`;
        approved: boolean;
    } & CommonWriteParams): Promise<viem.TransactionReceipt | undefined>;
}

declare class ERC20 extends Token<'ERC20'> {
    constructor(params: Omit<TokenHelperConstructorParams, 'tokenType'>);
    getAllowance(params: {
        owner: `0x${string}`;
        spender: `0x${string}`;
    }): Promise<bigint>;
    getBalanceOf(walletAddress: `0x${string}`): Promise<bigint>;
    getBondAddress(): Promise<`0x${string}`>;
    getDecimals(): Promise<number>;
    getName(): Promise<string>;
    getSymbol(): Promise<string>;
    getTotalSupply(): Promise<bigint>;
    approve(params: {
        spender: `0x${string}`;
        amount: bigint;
    } & CommonWriteParams): Promise<viem.TransactionReceipt | undefined>;
    create(params: CreateERC20TokenParams & Omit<CommonWriteParams, 'value'>): Promise<viem.TransactionReceipt | undefined>;
}

type CreateLockUpParams = {
    token: `0x${string}`;
    isERC20: boolean;
    amount: bigint;
    unlockTime: number;
    receiver: `0x${string}`;
    title: string;
};

declare class Lockup {
    protected chainId: SdkSupportedChainIds;
    constructor(chainId: SdkSupportedChainIds);
    getTotalLockUpCount(): Promise<bigint>;
    getLockUpIdsByReceiver(params: {
        receiver: `0x${string}`;
        start?: number;
        end?: number;
    }): Promise<readonly bigint[]>;
    getLockUpIdsByToken(params: {
        token: `0x${string}`;
        start?: number;
        end?: number;
    }): Promise<readonly bigint[]>;
    getLockUpById(lockUpId: number): Promise<{
        token: `0x${string}`;
        isERC20: boolean;
        unlockTime: number;
        unlocked: boolean;
        amount: bigint;
        receiver: `0x${string}`;
        title: string;
    }>;
    createLockUp(params: CreateLockUpParams & WriteTransactionCallbacks): Promise<viem.TransactionReceipt | undefined>;
    unlock(params: {
        lockUpId: number;
    } & WriteTransactionCallbacks): Promise<viem.TransactionReceipt | undefined>;
}

declare class Utils {
    generateMerkleRoot(wallets: `0x${string}`[]): `0x${string}`;
}

declare class MintClubSDK {
    wallet: Client;
    ipfs: Ipfs;
    utils: Utils;
    network(id: SdkSupportedChainIds | LowerCaseChainNames): Omit<ReturnType<typeof this.withClientHelper> & Client, '_getPublicClient'> & {
        getPublicClient: () => PublicClient;
        token: (symbolOrAddress: string) => ERC20;
        nft: (symbolOrAddress: string) => ERC1155;
        airdrop: Airdrop;
        lockup: Lockup;
        bond: Bond;
    };
    private withClientHelper;
    withPublicClient(publicClient: PublicClient): ReturnType<typeof this.network>;
    withWalletClient(walletClient: WalletClient): ReturnType<typeof this.network>;
}

type AbiType<T extends ContractNames> = T extends 'BOND' ? typeof BOND_ABI : T extends 'ERC20' ? typeof ERC20_ABI : T extends 'ERC1155' ? typeof ERC1155_ABI : T extends 'LOCKER' ? typeof LOCKER_ABI : T extends 'MERKLE' ? typeof MERKLE_ABI : T extends 'ZAP' ? typeof ZAP_ABI : T extends 'ONEINCH' ? typeof ONEINCH_ABI : never;
type SupportedAbiType = typeof BOND_ABI | typeof ERC20_ABI | typeof ERC1155_ABI | typeof LOCKER_ABI | typeof MERKLE_ABI | typeof ZAP_ABI | typeof ONEINCH_ABI;

type GenericLogicConstructorParams<A extends SupportedAbiType = SupportedAbiType, C extends ContractNames = ContractNames> = {
    chainId: SdkSupportedChainIds;
    type: C;
    abi: A;
};
declare class GenericContractLogic<A extends SupportedAbiType = SupportedAbiType, C extends ContractNames = ContractNames> {
    private abi;
    private contractType;
    private chainId;
    private clientHelper;
    private chain;
    constructor(params: GenericLogicConstructorParams<A, C>);
    read<T extends ContractFunctionName<A, 'view' | 'pure'>, R extends ContractFunctionArgs<A, 'view' | 'pure', T>>(params: TokenContractReadWriteArgs<A, T, R, C>): Promise<ReadContractReturnType<A, T, R>>;
    write<T extends ContractFunctionName<A, 'payable' | 'nonpayable'>, R extends ContractFunctionArgs<A, 'payable' | 'nonpayable', T>>(params: GenericWriteParams<A, T, R, C>): Promise<TransactionReceipt | undefined>;
}

declare global {
    interface Window {
        ethereum: any;
    }
}
declare class GenericContract<T extends ContractNames> {
    private contractType;
    private abi;
    constructor(type: T);
    network(id: SdkSupportedChainIds | LowerCaseChainNames): GenericContractLogic<AbiType<T>, T>;
}

declare const bondContract: GenericContract<"BOND">;
declare const erc20Contract: GenericContract<"ERC20">;
declare const erc1155Contract: GenericContract<"ERC1155">;
declare const zapContract: GenericContract<"ZAP">;
declare const airdropContract: GenericContract<"MERKLE">;
declare const lockupContract: GenericContract<"LOCKER">;
declare const oneInchContract: GenericContract<"ONEINCH">;

declare function generateCreateArgs(params: CreateTokenParams & {
    tokenType: 'ERC20' | 'ERC1155';
}): {
    tokenParams: {
        name: string;
        symbol: string;
        uri?: string | undefined;
    };
    bondParams: {
        mintRoyalty: number;
        burnRoyalty: number;
        reserveToken: `0x${string}`;
        maxSupply: bigint;
        stepRanges: bigint[];
        stepPrices: bigint[];
    };
};

declare function computeCreate2Address(chainId: number, tokenType: TokenType, tokenSymbol: string): `0x${string}`;
declare function createRandomAddress(): `0x${string}`;

declare const enum CurveEnum {
    FLAT = "FLAT",
    LINEAR = "LINEAR",
    EXPONENTIAL = "EXPONENTIAL",
    LOGARITHMIC = "LOGARITHMIC"
}
declare const graphTypes: readonly [CurveEnum.FLAT, CurveEnum.LINEAR, CurveEnum.EXPONENTIAL, CurveEnum.LOGARITHMIC];
declare function formatGraphPoint(value: number, maxDecimalPoints?: number): number;
declare function generateSteps(form: GenerateStepArgs): {
    stepData: {
        rangeTo: number;
        price: number;
    }[];
    mergeCount: number;
};
declare function calculateArea(steps: {
    x: number;
    y: number;
}[], partialIndex?: number): {
    intervalArea: number;
    totalArea: number;
};
type TableData = {
    start: number;
    end: number;
    price: number;
    tvl: number;
};
declare function generateTableData(steps: {
    x: number;
    y: number;
}[]): {
    data: TableData[];
    totalTVL: number;
};

type BondSteps = readonly {
    rangeTo: bigint;
    price: bigint;
}[];
declare function calculateRoyalty(amount: bigint, rate: number): bigint;
declare function binaryReverseMint(params: {
    reserveAmount: bigint;
    bondSteps: BondSteps;
    currentSupply: bigint;
    maxSupply: bigint;
    multiFactor: bigint;
    mintRoyalty: number;
    slippage: number;
}): bigint;
declare function binaryReverseBurn(params: {
    reserveAmount: bigint;
    bondSteps: BondSteps;
    currentSupply: bigint;
    multiFactor: bigint;
    burnRoyalty: number;
    slippage: number;
}): bigint;

declare const abis: Record<ContractNames, Abi>;
declare const whitelistedTokens: Record<1 | 10 | 42161 | 43114 | 137 | 56 | 8453 | 11155111 | 81457 | 168587773 | 43113, Record<`0x${string}`, BaseToken>>;
declare const errorMessages: Record<AllContractErrorNames, {
    message: string;
    reportToBugsnag?: boolean | undefined;
}>;
declare const supportedChains: readonly ["ethereum", "sepolia", "bnbchain", "polygon", "arbitrum", "optimism", "avalanche", "base"];
declare const supportedChainsMap: Record<LowerCaseChainNames, SdkSupportedChainIds>;

declare const mintclub: MintClubSDK;

export { BOND_ABI, BOND_ERROR_MESSAGES, type BaseToken, CHAINS, CHAIN_MAP, CHAIN_NAME_ID_MAP, COINGECKO_NETWORK_IDS, CONTRACT_ERROR_MESSAGES, type ChainType, type ContractNames, CurveEnum, DEFAULT_RANK_OPTIONS, ERC1155_ABI, ERC1155_ERROR_MESSAGES, ERC20_ABI, ERC20_ERROR_MESSAGES, LOCKER_ABI, LOCKER_ERROR_MESSAGES, type LowerCaseChainNames, MERKLE_ABI, MERKLE_ERROR_MESSAGES, type MainnetChain, ONEINCH_ABI, type RPCList, RPCS, type SdkSupportedChainIds, TOKENS, type TableData, type TokenChain, type TokenSymbol, type TokenType, WRAPPED_NATIVE_TOKENS, type WrappedToken, ZAP_ABI, ZAP_ERROR_MESSAGES, abis, airdropContract, applyDecimals, binaryReverseBurn, binaryReverseMint, bondContract, calculateArea, calculateRoyalty, chainIdToString, chainRPCFallbacks, chainStringToId, commify, computeCreate2Address, countDecimals, countLeadingZeros, createRandomAddress, erc1155Contract, erc20Contract, errorMessages, formatGraphPoint, generateCreateArgs, generateSteps, generateTableData, getChain, getMintClubContractAddress, getValueAfterLeadingZeros, graphTypes, handleScientificNotation, lockupContract, mintclub, oneInchContract, precisionRound, shortenNumber, supportedChains, supportedChainsMap, toFixed, toNumber, uncommify, wei, whitelistedTokens, zapContract };
